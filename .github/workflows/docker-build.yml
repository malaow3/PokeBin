name: Build, publish, and cleanup docker image

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Restore Docker build cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/pokebin:latest
            ghcr.io/${{ github.repository_owner }}/pokebin:${{ github.sha }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/pokebin-buildcache
          cache-to: |
            type=local,dest=/tmp/.buildx-cache,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/pokebin-buildcache,mode=max

      - name: Save Docker build cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Trigger Coolify redeploy
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_AUTH}}" \
            ${{ secrets.COOLIFY_WEBHOOK }}

      - name: Cleanup old images (keep only latest push)
        run: |
          scope="users"
          versions=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /$scope/${{ github.repository_owner }}/packages/container/pokebin/versions \
            | jq -r '.[].id')

          # Keep the most recent version, delete the rest
          keep_id=$(echo "$versions" | head -n 1)
          echo "$versions" | tail -n +2 | while read id; do
            echo "Deleting old image version $id"
            gh api \
              --method DELETE \
              -H "Accept: application/vnd.github+json" \
              /$scope/${{ github.repository_owner }}/packages/container/pokebin/versions/$id
          done

          echo "Kept version ID: $keep_id"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
