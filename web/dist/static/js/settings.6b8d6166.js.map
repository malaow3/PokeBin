{"version":3,"file":"static/js/settings.6b8d6166.js","sources":["webpack://web/./src/settings.tsx"],"sourcesContent":["import { createEffect, createSignal, onMount } from \"solid-js\";\nimport { render } from \"solid-js/web\";\nimport \"./app.css\";\n\nconst getLocal = (key: string, fallback: boolean) => {\n  const str = localStorage.getItem(key);\n  return str !== null ? JSON.parse(str) : fallback;\n};\n\nfunction updateThemeColor(dark: boolean) {\n  let meta = document.querySelector('meta[name=\"theme-color\"]');\n  if (!meta) {\n    meta = document.createElement(\"meta\");\n    meta.setAttribute(\"name\", \"theme-color\");\n    document.head.appendChild(meta);\n  }\n  meta.setAttribute(\"content\", dark ? \"#000000\" : \"#f9f9f9\");\n}\n\nconst SettingsPage = () => {\n  const [moveColors, setMoveColors] = createSignal(\n    getLocal(\"moveColors\", true),\n  );\n  const [twoDImages, setTwoDImages] = createSignal(\n    getLocal(\"twoDImages\", false),\n  );\n  const [darkMode, setDarkMode] = createSignal(getLocal(\"darkMode\", true));\n\n  // Set theme on mount\n  onMount(() => {\n    const dark = darkMode();\n    const body = document.body;\n    if (dark) {\n      body.classList.add(\"dark\");\n      body.classList.remove(\"light\");\n    } else {\n      body.classList.add(\"light\");\n      body.classList.remove(\"dark\");\n    }\n    updateThemeColor(dark);\n  });\n\n  // Update theme when darkMode changes\n  createEffect(() => {\n    const dark = darkMode();\n    const body = document.body;\n    if (dark) {\n      body.classList.add(\"dark\");\n      body.classList.remove(\"light\");\n    } else {\n      body.classList.add(\"light\");\n      body.classList.remove(\"dark\");\n    }\n    updateThemeColor(dark);\n  });\n\n  // Handler for dark mode toggle\n  const handleDarkMode = (checked: boolean) => {\n    setDarkMode(checked);\n    localStorage.setItem(\"darkMode\", JSON.stringify(checked));\n    // The effect above will update the body class and theme color\n  };\n\n  return (\n    <main class=\"min-h-screen flex items-center justify-center bg-[#f9f9f9] dark:bg-zinc-950 transition-colors\">\n      <div class=\"relative bg-white dark:bg-zinc-800 rounded-lg p-6 max-w-lg w-full max-h-[90vh] overflow-y-auto shadow-lg text-black dark:text-white\">\n        <h2 class=\"text-xl font-semibold mb-4\">Settings</h2>\n        <div class=\"flex flex-col gap-2 w-60\">\n          <div class=\"flex flex-row items-center gap-4\">\n            <label for=\"colors\" class=\"font-medium cursor-pointer w-32\">\n              Move colors\n            </label>\n            <input\n              id=\"colors\"\n              name=\"colors\"\n              type=\"checkbox\"\n              class=\"align-middle\"\n              checked={moveColors()}\n              onChange={(e) => {\n                setMoveColors(e.target.checked);\n                localStorage.setItem(\n                  \"moveColors\",\n                  JSON.stringify(e.target.checked),\n                );\n              }}\n            />\n          </div>\n          <div class=\"flex flex-row items-center gap-4\">\n            <label for=\"twoDImages\" class=\"font-medium cursor-pointer w-32\">\n              2D images\n            </label>\n            <input\n              id=\"twoDImages\"\n              name=\"twoDImages\"\n              type=\"checkbox\"\n              class=\"align-middle\"\n              checked={twoDImages()}\n              onChange={(e) => {\n                setTwoDImages(e.target.checked);\n                localStorage.setItem(\n                  \"twoDImages\",\n                  JSON.stringify(e.target.checked),\n                );\n              }}\n            />\n          </div>\n          <div class=\"flex flex-row items-center gap-4\">\n            <label for=\"darkMode\" class=\"font-medium cursor-pointer w-32\">\n              Dark Mode\n            </label>\n            <input\n              id=\"darkMode\"\n              name=\"darkMode\"\n              type=\"checkbox\"\n              class=\"align-middle\"\n              checked={darkMode()}\n              onChange={(e) => handleDarkMode(e.target.checked)}\n            />\n          </div>\n        </div>\n        <div class=\"mt-8 text-center text-xs text-gray-400 dark:text-gray-500\">\n          Settings are saved in your browser.\n        </div>\n      </div>\n    </main>\n  );\n};\n\nconst root = document.getElementById(\"root\");\nif (root) {\n  render(() => <SettingsPage />, root);\n}\n"],"names":["getLocal","key","fallback","str","localStorage","getItem","JSON","parse","updateThemeColor","dark","meta","document","querySelector","createElement","setAttribute","head","appendChild","SettingsPage","_el$","_el$5","_el$7","_el$8","_el$10","_el$13","moveColors","setMoveColors","createSignal","twoDImages","setTwoDImages","darkMode","setDarkMode","onMount","body","classList","add","remove","createEffect","handleDarkMode","checked","setItem","stringify","_el$6","_el$4","_el$3","_el$2","_tmpl$","firstChild","nextSibling","_el$9","_el$12","_el$11","addEventListener","e","target","_$effect","root","getElementById","render","_$createComponent"],"mappings":"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"}