{"version":3,"file":"static/js/settings.414a014f.js","sources":["webpack://web/./src/settings.tsx"],"sourcesContent":["import { createSignal } from \"solid-js\";\nimport { render } from \"solid-js/web\";\nimport \"./app.css\";\n\nconst getLocal = (key: string, fallback: boolean) => {\n  const str = localStorage.getItem(key);\n  return str !== null ? JSON.parse(str) : fallback;\n};\n\nconst SettingsPage = () => {\n  const [moveColors, setMoveColors] = createSignal(\n    getLocal(\"moveColors\", true),\n  );\n  const [twoDImages, setTwoDImages] = createSignal(\n    getLocal(\"twoDImages\", false),\n  );\n  const [darkMode, setDarkMode] = createSignal(getLocal(\"darkMode\", true));\n\n  // Update localStorage and body class on dark mode change\n  const handleDarkMode = (checked: boolean) => {\n    setDarkMode(checked);\n    localStorage.setItem(\"darkMode\", JSON.stringify(checked));\n    const body = document.body;\n    if (checked) {\n      body.classList.add(\"dark\");\n      body.classList.remove(\"light\");\n    } else {\n      body.classList.add(\"light\");\n      body.classList.remove(\"dark\");\n    }\n  };\n\n  return (\n    <main class=\"min-h-screen flex items-center justify-center bg-[#f9f9f9] dark:bg-zinc-950 transition-colors\">\n      <div class=\"relative bg-white dark:bg-zinc-800 rounded-lg p-6 max-w-lg w-full max-h-[90vh] overflow-y-auto shadow-lg text-black dark:text-white\">\n        <h2 class=\"text-xl font-semibold mb-4\">Settings</h2>\n        <div class=\"flex flex-col gap-2 w-60\">\n          <div class=\"flex flex-row items-center gap-4\">\n            <label for=\"colors\" class=\"font-medium cursor-pointer w-32\">\n              Move colors\n            </label>\n            <input\n              id=\"colors\"\n              name=\"colors\"\n              type=\"checkbox\"\n              class=\"align-middle\"\n              checked={moveColors()}\n              onChange={(e) => {\n                setMoveColors(e.target.checked);\n                localStorage.setItem(\n                  \"moveColors\",\n                  JSON.stringify(e.target.checked),\n                );\n              }}\n            />\n          </div>\n          <div class=\"flex flex-row items-center gap-4\">\n            <label for=\"twoDImages\" class=\"font-medium cursor-pointer w-32\">\n              2D images\n            </label>\n            <input\n              id=\"twoDImages\"\n              name=\"twoDImages\"\n              type=\"checkbox\"\n              class=\"align-middle\"\n              checked={twoDImages()}\n              onChange={(e) => {\n                setTwoDImages(e.target.checked);\n                localStorage.setItem(\n                  \"twoDImages\",\n                  JSON.stringify(e.target.checked),\n                );\n              }}\n            />\n          </div>\n          <div class=\"flex flex-row items-center gap-4\">\n            <label for=\"darkMode\" class=\"font-medium cursor-pointer w-32\">\n              Dark Mode\n            </label>\n            <input\n              id=\"darkMode\"\n              name=\"darkMode\"\n              type=\"checkbox\"\n              class=\"align-middle\"\n              checked={darkMode()}\n              onChange={(e) => handleDarkMode(e.target.checked)}\n            />\n          </div>\n        </div>\n        <div class=\"mt-8 text-center text-xs text-gray-400 dark:text-gray-500\">\n          Settings are saved in your browser.\n        </div>\n      </div>\n    </main>\n  );\n};\n\nconst root = document.getElementById(\"root\");\nif (root) {\n  render(() => <SettingsPage />, root);\n}\n"],"names":["getLocal","key","fallback","str","localStorage","getItem","JSON","parse","SettingsPage","_el$","_el$5","_el$7","_el$8","_el$10","_el$13","moveColors","setMoveColors","createSignal","twoDImages","setTwoDImages","darkMode","setDarkMode","handleDarkMode","checked","setItem","stringify","body","document","classList","add","remove","_el$6","_el$4","_el$3","_el$2","_tmpl$","firstChild","nextSibling","_el$9","_el$12","_el$11","addEventListener","e","target","_$effect","root","getElementById","render","_$createComponent"],"mappings":"qmCAIA,IAAMA,EAAWA,CAACC,EAAaC,KAC7B,IAAMC,EAAMC,aAAaC,OAAO,CAACJ,GACjC,OAAOE,AAAQ,OAARA,EAAeG,KAAKC,KAAK,CAACJ,GAAOD,CAC1C,EAEMM,EAAeA,SAuBnBC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAtBA,GAAM,CAACC,EAAYC,EAAc,CAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAClCjB,EAAS,aAAc,KAEnB,CAACkB,EAAYC,EAAc,CAAGF,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAClCjB,EAAS,aAAc,KAEnB,CAACoB,EAAUC,EAAY,CAAGJ,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAajB,EAAS,WAAY,KAG5DsB,EAAiBA,AAACC,IACtBF,EAAYE,GACZnB,aAAaoB,OAAO,CAAC,WAAYlB,KAAKmB,SAAS,CAACF,IAChD,IAAMG,EAAOC,SAASD,IAAI,CACtBH,GACFG,EAAKE,SAAS,CAACC,GAAG,CAAC,QACnBH,EAAKE,SAAS,CAACE,MAAM,CAAC,WAEtBJ,EAAKE,SAAS,CAACC,GAAG,CAAC,SACnBH,EAAKE,SAAS,CAACE,MAAM,CAAC,QAE1B,EAEA,OAAAnB,EAAAoB,AAAArB,CAAAA,EAAAsB,AAAAC,AAAAC,AAAAzB,CAAAA,EAAA0B,KAAAC,UAAA,CAAAA,UAAA,CAAAC,WAAA,CAAAD,UAAA,EAAAA,UAAA,CAAAC,WAAA,CAAAxB,EAAAyB,AAAA1B,CAAAA,EAAAF,EAAA2B,WAAA,EAAAD,UAAA,CAAAC,WAAA,CAAAvB,EAAAyB,AAAAC,AAAA5B,EAAAyB,WAAA,CAAAD,UAAA,CAAAC,WAAA,CAAA1B,EAAA8B,gBAAA,UAeuBC,IACT1B,EAAc0B,EAAEC,MAAM,CAACpB,OAAO,EAC9BnB,aAAaoB,OAAO,CAClB,aACAlB,KAAKmB,SAAS,CAACiB,EAAEC,MAAM,CAACpB,OAAO,EAEnC,GAACV,EAAA4B,gBAAA,UAaUC,IACTvB,EAAcuB,EAAEC,MAAM,CAACpB,OAAO,EAC9BnB,aAAaoB,OAAO,CAClB,aACAlB,KAAKmB,SAAS,CAACiB,EAAEC,MAAM,CAACpB,OAAO,EAEnC,GAACT,EAAA2B,gBAAA,UAaUC,GAAMpB,EAAeoB,EAAEC,MAAM,CAACpB,OAAO,GAACqB,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAA,IAAAjC,EAAAY,OAAA,CAvCxCR,KAAY6B,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAA,IAAA/B,EAAAU,OAAA,CAmBZL,KAAY0B,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAA,IAAA9B,EAAAS,OAAA,CAmBZH,KAAUX,CAWjC,EAEMoC,EAAOlB,SAASmB,cAAc,CAAC,OACjCD,CAAAA,GACFE,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,EAAO,IAAAC,AAAC,GAADA,EAAAA,EAAAA,AAAAA,EAAOxC,EAAY,IAAKqC,E"}