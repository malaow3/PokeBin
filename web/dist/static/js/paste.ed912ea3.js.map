{"version":3,"file":"static/js/paste.ed912ea3.js","sources":["webpack://web/./src/wasm_helpers.ts","webpack://web/./src/web_wasm_helpers.ts","webpack://web/./src/wasm_utils.ts","webpack://web/./src/utils.ts","webpack://web/./src/settings.ts","webpack://web/./src/watermark.tsx","webpack://web/./src/settingsForm.tsx","webpack://web/./src/PasteViewBase.tsx","webpack://web/./src/PasteViewNew.tsx","webpack://web/./src/PasteView.tsx","webpack://web/./src/encryption.ts","webpack://web/./src/paste.tsx","webpack://web/webpack/runtime/define_property_getters","webpack://web/webpack/runtime/has_own_property","webpack://web/webpack/runtime/on_chunk_loaded","webpack://web/webpack/runtime/public_path","webpack://web/webpack/runtime/rspack_version","webpack://web/webpack/runtime/jsonp_chunk_loading","webpack://web/webpack/runtime/rspack_unique_id"],"sourcesContent":["export let exports: WebAssemblyExports;\nexport let memory: WebAssembly.Memory;\nimport { encrypt, decrypt } from \"./encryption.ts\";\nimport { type WasmInstance, decodeString } from \"./wasm_utils.ts\";\n\nlet instance: WasmInstance;\n\ninterface WebAssemblyExports {\n  memory: WebAssembly.Memory;\n\n  init(seed: bigint): void;\n\n  allocUint8(length: number): number;\n\n  encryptMessage(\n    buffer_ptr: number,\n    passphrase_len: number,\n    message_len: number,\n  ): boolean;\n\n  resetArena(): void;\n  free(pointer: number, length: number): void;\n\n  getResultPtr(): number;\n  getResultLen(): number;\n  decryptMessage(\n    buffer_ptr: number,\n    passphrase_len: number,\n    encrypted_len: number,\n  ): boolean;\n}\n\nasync function initWasm() {\n  const wasmModule = await WebAssembly.instantiateStreaming(fetch(\"/wasm\"), {\n    env: {\n      _throwError(pointer: number, length: number) {\n        const message = decodeString(instance, pointer, length);\n        throw new Error(message);\n      },\n      _consoleLog(pointer: number, length: number) {\n        const message = decodeString(instance, pointer, length);\n        console.log(message);\n      },\n    },\n  });\n  const inst = wasmModule.instance;\n  exports = inst.exports as unknown as WebAssemblyExports;\n  memory = exports.memory;\n\n  instance = {\n    exports: exports,\n    memory: memory,\n  };\n\n  const now = BigInt(Date.now());\n  exports.init(now);\n}\n\nexport { encrypt, initWasm, decrypt };\n","import type { Accessor, Setter } from \"solid-js\";\nimport type { Settings } from \"./settings.ts\";\nimport {\n  type WasmInstance,\n  decodeNullTerminatedString,\n  decodeString,\n  encodeNullTerminatedString,\n  sizeOfUint32,\n} from \"./wasm_utils.ts\";\nimport { getId } from \"./utils.ts\";\nexport let exports: WebAssemblyExports;\nexport let memory: WebAssembly.Memory;\n\ntype QRResponse = { ptr: number; size: number };\nlet qrResponse: QRResponse = { ptr: 0, size: 0 };\n\nfunction createQRCodeCallback(ptr: number, size: number) {\n  qrResponse = { ptr, size };\n}\n\ninterface WebAssemblyExports {\n  memory: WebAssembly.Memory;\n\n  init(seed: bigint): void;\n\n  allocUint8(length: number): number;\n\n  resetArena(): void;\n  free(pointer: number, length: number): void;\n\n  validatePaste(buffer_ptr: number, paste_len: number): number;\n  parsePaste(\n    buffer_ptr: number,\n    buffer_len: number,\n    twoDimages: boolean,\n  ): number;\n  destroyPaste(paste_ptr: number): void;\n\n  savePasteToLastViewed(\n    limit: number,\n    packedStringPointer: number,\n    packedStringLength: number,\n    pasteJsonPointer: number,\n    pasteJsonLength: number,\n  ): number;\n\n  getPackedPtr(): number;\n  getPackedLen(): number;\n  resetPackedResult(): void;\n  createQRCode(messagePtr: number): void;\n}\n\nlet instance: WasmInstance;\n\nexport async function initWasm() {\n  const version_response = await fetch(\"/version\");\n  const version = await version_response.text();\n  const wasmModule = await WebAssembly.instantiateStreaming(\n    fetch(`/web_wasm?v=${version}`),\n    {\n      env: {\n        _throwError(pointer: number, length: number) {\n          const message = decodeString(instance, pointer, length);\n          throw new Error(message);\n        },\n        _consoleLog(pointer: number, length: number) {\n          const message = decodeString(instance, pointer, length);\n          console.log(message);\n        },\n        createQRCodeCallback,\n      },\n    },\n  );\n  const inst = wasmModule.instance;\n  exports = inst.exports as unknown as WebAssemblyExports;\n  memory = exports.memory;\n\n  instance = {\n    exports: exports,\n    memory: memory,\n  };\n\n  const now = BigInt(Date.now());\n  exports.init(now);\n}\n\nexport function SavePasteToLastVisited(\n  sett: Accessor<Settings>,\n  setSett: Setter<Settings>,\n  paste: Paste,\n) {\n  if (sett().lastViewedCount === 0) {\n    return;\n  }\n  const packedString = sett().lastViewedPacked;\n  const { pointer: packedStringPointer, length: packedStringLength } =\n    encodeNullTerminatedString(instance, packedString);\n\n  // @ts-ignore: we need to add the ID to the paste struct\n  paste.id = getId();\n\n  const { pointer: pasteJsonPointer, length: pasteJsonLength } =\n    encodeNullTerminatedString(instance, JSON.stringify(paste));\n\n  instance.exports.savePasteToLastViewed(\n    sett().lastViewedCount,\n    packedStringPointer,\n    packedStringLength,\n    pasteJsonPointer,\n    pasteJsonLength,\n  );\n\n  const packedPtr = instance.exports.getPackedPtr();\n  const packedLen = instance.exports.getPackedLen();\n\n  if (packedLen === -1) {\n    console.log(\"Failed to get packed string length\");\n    instance.exports.resetPackedResult();\n    return;\n  }\n\n  // Read the packed string as bytes\n  const packedBytes = new Uint8Array(memory.buffer, packedPtr, packedLen);\n\n  // Decode as UTF-8 string\n  const packed = new TextDecoder().decode(packedBytes);\n  console.log(packed);\n\n  setSett({ ...sett(), lastViewedPacked: packed });\n  localStorage.setItem(\"lastViewedPacked\", packed);\n\n  instance.exports.resetPackedResult();\n  instance.exports.resetArena();\n}\n\nexport function validatePaste(paste: string): number {\n  if (!exports || !memory) {\n    return -1;\n  }\n\n  const pasteBuffer = new TextEncoder().encode(paste);\n  const buffer_ptr = exports.allocUint8(pasteBuffer.length);\n  if (!buffer_ptr) {\n    console.error(\"Failed to allocate memory\");\n    return -1;\n  }\n\n  // Get a view of memory\n  const memoryView = new Uint8Array(exports.memory.buffer);\n\n  // Copy the entire buffer\n  memoryView.set(pasteBuffer, buffer_ptr);\n\n  const success = exports.validatePaste(buffer_ptr, pasteBuffer.length);\n  exports.resetArena();\n\n  return success;\n}\n\nfunction alignTo4Bytes(pointer: number): number {\n  return Math.ceil(pointer / 4) * 4;\n}\n\nexport type Move = {\n  name: string;\n  type1: string;\n};\n\nexport type Pokemon = {\n  name: string;\n  nickname: string;\n  item: string;\n  gender: string;\n  item_image: string;\n  pokemon_image: string;\n  moves_len: number;\n  moves: Move[];\n  evs: number[];\n  ivs: number[];\n  lines_count: number;\n  lines: string[];\n  last_stat_ev: string;\n  last_stat_iv: string;\n  type1: string;\n  type2: string;\n  ability: string;\n  level: number;\n  shiny: string;\n  hidden_power: string;\n  tera_type: string;\n  nature: string;\n};\n\nexport type Paste = {\n  title: string;\n  author: string;\n  notes: string;\n  format: string;\n  rental: string;\n  pokemon_len: number;\n  pokemon: Pokemon[];\n  isOts: boolean;\n};\n\nfunction decodeMove(movePtr: number): Move {\n  try {\n    let offset = 0;\n    const namePtr = new Uint32Array(memory.buffer, movePtr, 1);\n    const nameSlice = namePtr[0];\n    const name = decodeNullTerminatedString(instance, nameSlice);\n    offset += sizeOfUint32;\n\n    const type1Ptr = new Uint32Array(memory.buffer, movePtr + offset, 1);\n    const type1Slice = type1Ptr[0];\n    const type1 = decodeNullTerminatedString(instance, type1Slice);\n\n    return { name, type1 };\n  } catch (e) {\n    console.error(e);\n    return { name: \"\", type1: \"\" };\n  }\n}\n\nfunction decodePokemon(pokemonPtr: number): Pokemon {\n  try {\n    const basePtr = pokemonPtr;\n    let offset = 0;\n    const namePtr = new Uint32Array(memory.buffer, basePtr, 1);\n    const nameSlice = namePtr[0];\n    const name = decodeNullTerminatedString(instance, nameSlice);\n    offset += sizeOfUint32;\n\n    const nicknamePtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const nicknameSlice = nicknamePtr[0];\n    const nickname = decodeNullTerminatedString(instance, nicknameSlice);\n    offset += sizeOfUint32;\n\n    const itemPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const itemSlice = itemPtr[0];\n    const item = decodeNullTerminatedString(instance, itemSlice);\n    offset += sizeOfUint32;\n\n    const genderPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const genderNum = genderPtr[0];\n    offset += sizeOfUint32;\n\n    const itemImagePtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const itemImageSlice = itemImagePtr[0];\n    const itemImage = decodeNullTerminatedString(instance, itemImageSlice);\n    offset += sizeOfUint32;\n\n    const pokemonImagePtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const pokemonImageSlice = pokemonImagePtr[0];\n    const pokemonImage = decodeNullTerminatedString(\n      instance,\n      pokemonImageSlice,\n    );\n    offset += sizeOfUint32;\n\n    const movesLenPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const moves_len = movesLenPtr[0];\n    offset += sizeOfUint32;\n\n    const moves: Move[] = [];\n    if (moves_len > 0) {\n      const movesArrayPtrSlice = new Uint32Array(\n        memory.buffer,\n        basePtr + offset,\n        1,\n      );\n      const movesArrayPointer = movesArrayPtrSlice[0];\n\n      const movesArray = new Uint32Array(\n        memory.buffer,\n        movesArrayPointer,\n        moves_len,\n      );\n\n      if (moves_len > 0) {\n        for (let i = 0; i < moves_len; i++) {\n          const currentMovePtr = movesArray[i];\n          try {\n            const move = decodeMove(currentMovePtr);\n            moves.push(move);\n          } catch (e) {\n            console.error(`Error decoding move at index ${i}:`, e);\n          }\n        }\n      }\n    }\n    offset += sizeOfUint32;\n\n    let gender = \"\";\n    if (genderNum === 77) {\n      gender = \"M\";\n    } else if (genderNum === 70) {\n      gender = \"F\";\n    }\n\n    const evs: number[] = [];\n    for (let i = 0; i < 6; i++) {\n      const evPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n      const evValue = evPtr[0];\n      evs.push(evValue);\n      offset += sizeOfUint32;\n    }\n\n    const ivs: number[] = [];\n    for (let i = 0; i < 6; i++) {\n      const ivPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n      const ivValue = ivPtr[0];\n      ivs.push(ivValue);\n      offset += sizeOfUint32;\n    }\n\n    const linesLenPointer = basePtr + offset;\n    const linesLenSlice = new Uint32Array(memory.buffer, linesLenPointer, 1);\n    const lines_len = linesLenSlice[0];\n    offset += sizeOfUint32;\n\n    const lines: string[] = [];\n    if (lines_len > 0) {\n      // Decode items array pointer - ensure 4-byte alignment\n      const linesArrayPtrPointer = basePtr + offset;\n      const linesArrayPtrSlice = new Uint32Array(\n        memory.buffer,\n        linesArrayPtrPointer,\n        1,\n      );\n      const linesArrayPointer = linesArrayPtrSlice[0];\n\n      // Decode each line - ensure the pointer is properly aligned\n      const alignedLinesArrayPointer = alignTo4Bytes(linesArrayPointer);\n      const linesArraySlice = new Uint32Array(\n        memory.buffer,\n        alignedLinesArrayPointer,\n        lines_len,\n      );\n\n      for (let i = 0; i < lines_len; i++) {\n        const linePtr = linesArraySlice[i];\n        const line = decodeNullTerminatedString(instance, linePtr);\n        lines.push(line);\n      }\n\n      offset += sizeOfUint32 * lines_len;\n    } else {\n      offset += sizeOfUint32;\n    }\n\n    const lastStatEvPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const lastStatEvSlice = lastStatEvPtr[0];\n    const last_stat_ev = decodeNullTerminatedString(instance, lastStatEvSlice);\n    offset += sizeOfUint32;\n\n    const lastStatIvPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const lastStatIvSlice = lastStatIvPtr[0];\n    const last_stat_iv = decodeNullTerminatedString(instance, lastStatIvSlice);\n    offset += sizeOfUint32;\n\n    const type1Ptr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const type1Slice = type1Ptr[0];\n    const type1 = decodeNullTerminatedString(instance, type1Slice);\n    offset += sizeOfUint32;\n\n    const type2Ptr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const type2Slice = type2Ptr[0];\n    const type2 = decodeNullTerminatedString(instance, type2Slice);\n    offset += sizeOfUint32;\n\n    const abilityPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const abilitySlice = abilityPtr[0];\n    const ability = decodeNullTerminatedString(instance, abilitySlice);\n    offset += sizeOfUint32;\n\n    const levelPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const level = levelPtr[0];\n    offset += sizeOfUint32;\n\n    const shinyPtr = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const shinySlice = shinyPtr[0];\n    const shiny = decodeNullTerminatedString(instance, shinySlice);\n    offset += sizeOfUint32;\n\n    const hpPointer = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const hpSlice = hpPointer[0];\n    const hidden_power = decodeNullTerminatedString(instance, hpSlice);\n    offset += sizeOfUint32;\n\n    const teraTypePointer = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const teraTypeSlice = teraTypePointer[0];\n    const tera_type = decodeNullTerminatedString(instance, teraTypeSlice);\n    offset += sizeOfUint32;\n\n    const naturePointer = new Uint32Array(memory.buffer, basePtr + offset, 1);\n    const natureSlice = naturePointer[0];\n    const nature = decodeNullTerminatedString(instance, natureSlice);\n    offset += sizeOfUint32;\n\n    return {\n      name,\n      nickname,\n      item,\n      gender,\n      item_image: itemImage,\n      pokemon_image: pokemonImage,\n      moves_len: moves_len,\n      moves,\n      evs,\n      ivs,\n      lines_count: lines_len,\n      lines,\n      last_stat_ev,\n      last_stat_iv,\n      type1,\n      type2,\n      ability,\n      level,\n      shiny,\n      hidden_power,\n      tera_type,\n      nature,\n    };\n  } catch (e) {\n    console.error(e);\n    return {\n      name: \"\",\n      nickname: \"\",\n      item: \"\",\n      gender: \"\",\n      item_image: \"\",\n      pokemon_image: \"\",\n      moves_len: 0,\n      moves: [],\n      evs: [],\n      ivs: [],\n      lines_count: 0,\n      lines: [],\n      last_stat_ev: \"\",\n      last_stat_iv: \"\",\n      type1: \"\",\n      type2: \"\",\n      ability: \"\",\n      level: 100,\n      shiny: \"\",\n      hidden_power: \"\",\n      tera_type: \"\",\n      nature: \"\",\n    };\n  }\n}\n\nfunction decodePaste(pastePtr: number): Paste {\n  try {\n    // Access the header pointer\n    const titleSlice = new Uint32Array(memory.buffer, pastePtr, 1);\n    const titlePtr = titleSlice[0];\n    const title = decodeNullTerminatedString(instance, titlePtr);\n\n    const authorSlice = new Uint32Array(\n      memory.buffer,\n      pastePtr + sizeOfUint32,\n      1,\n    );\n    const authorPtr = authorSlice[0];\n    const author = decodeNullTerminatedString(instance, authorPtr);\n\n    const notesSlice = new Uint32Array(\n      memory.buffer,\n      pastePtr + sizeOfUint32 * 2,\n      1,\n    );\n    const notesPtr = notesSlice[0];\n    const notes = decodeNullTerminatedString(instance, notesPtr);\n\n    const formatSlice = new Uint32Array(\n      memory.buffer,\n      pastePtr + sizeOfUint32 * 3,\n      1,\n    );\n    const formatPtr = formatSlice[0];\n    const format = decodeNullTerminatedString(instance, formatPtr);\n\n    const rentalSlice = new Uint32Array(\n      memory.buffer,\n      pastePtr + sizeOfUint32 * 4,\n      1,\n    );\n    const rentalPtr = rentalSlice[0];\n    const rental = decodeNullTerminatedString(instance, rentalPtr);\n\n    const pokemonLenPtr = pastePtr + sizeOfUint32 * 5;\n    const pokemonLenSlice = new Uint32Array(memory.buffer, pokemonLenPtr, 1);\n    const pokemon_len = pokemonLenSlice[0];\n\n    // Decode items array pointer - ensure 4-byte alignment\n    const pokemonArrayPtrPointer = alignTo4Bytes(pastePtr + sizeOfUint32 * 6);\n    const pokemonArrayPtrSlice = new Uint32Array(\n      memory.buffer,\n      pokemonArrayPtrPointer,\n      1,\n    );\n    const pokemonArrayPointer = pokemonArrayPtrSlice[0];\n\n    // Decode each item - ensure the pointer is properly aligned\n    const pokemon: Pokemon[] = [];\n    const alignedPokemonArrayPointer = alignTo4Bytes(pokemonArrayPointer);\n    const pokemonArraySlice = new Uint32Array(\n      memory.buffer,\n      alignedPokemonArrayPointer,\n      pokemon_len,\n    );\n\n    for (let i = 0; i < pokemon_len; i++) {\n      const pokemonPtr = pokemonArraySlice[i];\n      const mon = decodePokemon(pokemonPtr);\n      pokemon.push(mon);\n    }\n\n    const isOtsOffset = pokemonArrayPtrPointer + sizeOfUint32;\n    const isOtsValue = new Uint32Array(memory.buffer, isOtsOffset, 1)[0];\n    const isOts = isOtsValue === 1;\n\n    const paste = {\n      title,\n      author,\n      notes,\n      format,\n      rental,\n      pokemon_len,\n      pokemon,\n      isOts,\n    };\n\n    return paste;\n  } finally {\n    exports.destroyPaste(pastePtr);\n  }\n}\n\nexport function parsePaste(data: string, twoDimages: boolean): Paste | null {\n  if (!exports || !memory) {\n    return null;\n  }\n\n  const { pointer, length } = encodeNullTerminatedString(instance, data);\n\n  const pastePtr = exports.parsePaste(pointer, length, twoDimages);\n  const paste = decodePaste(pastePtr);\n\n  exports.resetArena();\n\n  return paste;\n}\n\nexport function utf8ToBase64(str: string | undefined) {\n  // Encode to UTF-8 bytes, then to base64\n  return btoa(String.fromCharCode(...new TextEncoder().encode(str)));\n}\n\nexport function base64ToUtf8(b64: string) {\n  // Decode base64 to bytes, then decode as UTF-8\n  return new TextDecoder().decode(\n    Uint8Array.from(atob(b64), (c) => c.charCodeAt(0)),\n  );\n}\n\nfunction renderQRCode(\n  matrix: number[] | Uint8Array<ArrayBuffer>,\n  size: number,\n) {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (ctx === null) {\n    return;\n  }\n\n  const canvasScale = 10;\n  const canvasSize = canvasScale * size;\n\n  canvas.width = canvasSize;\n  canvas.height = canvasSize;\n\n  ctx.scale(canvasScale, canvasScale);\n\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, size, size);\n\n  ctx.fillStyle = \"black\";\n\n  for (let r = 0; r < size; r++) {\n    for (let c = 0; c < size; c++) {\n      if (matrix[r * size + c] === 1) {\n        ctx.fillRect(c, r, 1, 1);\n      }\n    }\n  }\n\n  return canvas.toDataURL(\"image/png\");\n}\n\nexport function createQRCode(message: string) {\n  const buffer = new TextEncoder().encode(message);\n  const messagePtr = exports.allocUint8(buffer.length + 1);\n  const slice = new Uint8Array(memory.buffer, messagePtr, buffer.length + 1);\n  slice.set(buffer);\n  slice[buffer.length] = 0;\n\n  exports.createQRCode(messagePtr);\n  // createQRCodeCallback is called by the wasm module\n\n  const matrix = new Uint8Array(\n    memory.buffer,\n    qrResponse.ptr,\n    qrResponse.size * qrResponse.size,\n  );\n  const url = renderQRCode(matrix, qrResponse.size);\n\n  exports.free(messagePtr, message.length);\n  exports.free(qrResponse.ptr, qrResponse.size * qrResponse.size);\n  return url;\n}\n","export const sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT;\nexport const sizeOfNullByte = Uint8Array.BYTES_PER_ELEMENT;\nexport const nullByte = 0x00;\n\nexport type WasmInstance = {\n  // biome-ignore lint/suspicious/noExplicitAny : The exports type can change based on the Wasm module\n  exports: any;\n  memory: WebAssembly.Memory;\n};\n\nexport function decodeString(\n  instance: WasmInstance,\n  pointer: number,\n  length: number,\n) {\n  const slice = new Uint8Array(instance.memory.buffer, pointer, length);\n  return new TextDecoder().decode(slice);\n}\n\nexport function decodeNullTerminatedString(\n  instance: WasmInstance,\n  pointer: number,\n) {\n  if (pointer === 0) return \"\";\n\n  // Get current memory buffer size\n  const memSize = instance.memory.buffer.byteLength;\n\n  // Ensure pointer is within bounds\n  if (pointer >= memSize) {\n    console.error(`Invalid pointer: ${pointer} exceeds memory size ${memSize}`);\n    return \"\";\n  }\n\n  // Create a view starting from pointer\n  const slice = new Uint8Array(instance.memory.buffer, pointer);\n\n  // Find null terminator, but limit search to avoid buffer overflow\n  const maxLength = memSize - pointer;\n  const length = slice.findIndex((value: number, index) => {\n    if (index >= maxLength) return true;\n    return value === nullByte;\n  });\n\n  if (length === -1 || length === 0) {\n    return \"\";\n  }\n\n  try {\n    return decodeString(instance, pointer, length);\n  } catch (e) {\n    console.error(`Failed to decode string at pointer ${pointer}:`, e);\n    return \"\";\n  }\n}\n\nexport function encodeNullTerminatedString(\n  instance: WasmInstance,\n  string: string,\n) {\n  const buffer = new TextEncoder().encode(string);\n  const sizeOfNullTerminatedString = buffer.length + sizeOfNullByte;\n  const pointer = instance.exports.allocUint8(sizeOfNullTerminatedString);\n  const slice = new Uint8Array(\n    instance.memory.buffer,\n    pointer,\n    sizeOfNullTerminatedString,\n  );\n  slice.set(buffer);\n  slice[buffer.length] = nullByte;\n  return { pointer, length: buffer.length };\n}\n","export function getId(): string {\n  const url = window.location.href;\n  const items = url.split(\"/\");\n  const id = items[items.length - 1];\n  return id;\n}\n","import { type Accessor, createSignal } from \"solid-js\";\n\nexport type Settings = {\n  moveColors: boolean;\n  twoDImages: boolean;\n  darkMode: boolean;\n  newFormat: boolean;\n  lastViewedCount: number;\n  lastViewedPacked: string;\n};\n\nexport function initSettings() {\n  const moveColorsString = localStorage.getItem(\"moveColors\");\n  let moveColors = true;\n  if (moveColorsString !== null) {\n    moveColors = JSON.parse(moveColorsString);\n  }\n\n  const twoDImagesString = localStorage.getItem(\"twoDImages\");\n  let twoDImages = false;\n  if (twoDImagesString !== null) {\n    twoDImages = JSON.parse(twoDImagesString);\n  }\n\n  const darkModeString = localStorage.getItem(\"darkMode\");\n  let darkMode = true;\n  if (darkModeString !== null) {\n    darkMode = JSON.parse(darkModeString);\n  }\n\n  const newFormatString = localStorage.getItem(\"newFormat\");\n  let newFormat = false;\n  if (newFormatString !== null) {\n    newFormat = JSON.parse(newFormatString);\n  }\n\n  const lastViewedCountString = localStorage.getItem(\"lastViewedCount\");\n  let lastViewedCount = 20;\n  if (lastViewedCountString !== null) {\n    lastViewedCount = JSON.parse(lastViewedCountString);\n  }\n\n  const lastViewedPackedString = localStorage.getItem(\"lastViewedPacked\");\n  let lastViewedPacked = \"\";\n  if (lastViewedPackedString !== null) {\n    lastViewedPacked = lastViewedPackedString;\n  }\n\n  const initSettings: Settings = {\n    moveColors: moveColors,\n    twoDImages: twoDImages,\n    darkMode: darkMode,\n    newFormat: newFormat,\n    lastViewedCount: lastViewedCount,\n    lastViewedPacked: lastViewedPacked,\n  };\n\n  const [sett, setSett] = createSignal<Settings>(initSettings);\n  return { sett, setSett };\n}\n\nfunction packedToList(packed: string) {\n  const list = packed.split(\"\\n\");\n  return list;\n}\n\nexport type PackedPaste = {\n  id: string;\n  name: string;\n  format: string;\n  pokemon: string[];\n};\n\nexport function getPackedPastes(): PackedPaste[] {\n  const packed = localStorage.getItem(\"lastViewedPacked\");\n  if (packed === null) {\n    return [];\n  }\n  const list: string[] = packedToList(packed);\n  return list.map((item) => {\n    const sections = item.split(\"|\");\n    return {\n      id: sections[0],\n      name: sections[1],\n      format: sections[2],\n      pokemon: sections.slice(3),\n    };\n  });\n}\n\nfunction listToPacked(list: PackedPaste[]): string {\n  let packedString = \"\";\n  for (let i = 0; i < list.length; i++) {\n    if (i > 0) {\n      packedString += \"\\n\";\n    }\n    packedString += `${list[i].id}|${list[i].name}|${list[i].format}`;\n    for (let j = 0; j < list[i].pokemon.length; j++) {\n      packedString += `|${list[i].pokemon[j]}`;\n    }\n  }\n  return packedString;\n}\n\nexport function removePackedPaste(\n  id: string,\n  sett: Accessor<Settings>,\n  setSett: (settings: Settings) => void,\n) {\n  const items = getPackedPastes().filter((item) => item.id !== id);\n  const newPacked = listToPacked(items);\n  localStorage.setItem(\"lastViewedPacked\", newPacked);\n  setSett({ ...sett(), lastViewedPacked: newPacked });\n}\n\nexport function updateSetting(\n  key: string,\n  value: boolean | number | string,\n  sett: Accessor<Settings>,\n  setSett: (settings: Settings) => void,\n) {\n  if (key === \"lastViewedCount\" && typeof value === \"number\") {\n    const list = packedToList(sett().lastViewedPacked);\n    if (value === 0) {\n      setSett({ ...sett(), lastViewedPacked: \"\" });\n    } else {\n      setSett({ ...sett(), lastViewedPacked: list.slice(0, value).join(\"\\n\") });\n    }\n  }\n\n  setSett({ ...sett(), [key]: value });\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","import { createEffect, createSignal, onMount } from \"solid-js\";\nimport logo from \"../public/logo/large_logo_cropped.webp\";\n\nfunction Watermark() {\n  const [isFixed, setIsFixed] = createSignal(false);\n  const [dir, setDir] = createSignal(\"shrink\");\n  const [prevSize, setPrevSize] = createSignal(window.innerWidth);\n  const [height, setHeight] = createSignal(\"50px\");\n  const [width, setWidth] = createSignal(\"100px\");\n  const [bottom, setBottom] = createSignal(\"10px\");\n  const [padding, setPadding] = createSignal(\"0px\");\n\n  function check() {\n    const aspectRatio = window.innerWidth / window.innerHeight;\n\n    if (aspectRatio >= 1.84 && aspectRatio <= 1.864) {\n      setWidth(\"75px\");\n      setHeight(\"35px\");\n      setBottom(\"55px\");\n    } else if (window.innerWidth <= 450) {\n      setWidth(\"75px\");\n      setHeight(\"35px\");\n      setBottom(\"55px\");\n    } else if (window.innerWidth <= 1290) {\n      setWidth(\"75px\");\n      setHeight(\"35px\");\n      setBottom(\"60px\");\n    } else if (window.innerWidth <= 1400) {\n      setWidth(\"75px\");\n      setHeight(\"35px\");\n      setBottom(\"60px\");\n    } else {\n      setBottom(\"20px\");\n      setPadding(\"15px\");\n    }\n    if (window.innerWidth <= 1290) {\n      if (dir() === \"shrink\") {\n        setIsFixed(true);\n      }\n    } else {\n      setIsFixed(false);\n    }\n  }\n\n  onMount(() => {\n    window.onresize = () => {\n      if (window.innerWidth < prevSize()) {\n        setDir(\"shrink\");\n        setPrevSize(window.innerWidth);\n      } else {\n        setDir(\"grow\");\n        setPrevSize(window.innerWidth);\n      }\n      check();\n    };\n    check();\n  });\n\n  createEffect(() => {\n    check();\n  });\n\n  // return (\n  //   <div\n  //     id=\"NOCOPY\"\n  //     style={{\n  //       position: isFixed() ? \"fixed\" : \"relative\",\n  //       display: \"flex\",\n  //       \"flex-direction\": isFixed() ? \"column\" : \"row\",\n  //       \"font-size\": \"32px\",\n  //       bottom: \"30px\",\n  //       right: \"10px\",\n  //       // color: 'rgba(255, 255, 255, 0.6)',\n  //       color: \"rgba(251, 173, 255, 0.75)\",\n  //       \"pointer-events\": \"none\",\n  //       \"z-index\": 9999,\n  //       \"transform-origin\": \"bottom right\",\n  //       \"user-select\": \"none\",\n  //       \"-webkit-user-select\": \"none\",\n  //       \"-moz-user-select\": \"none\",\n  //       \"-ms-user-select\": \"none\",\n  //       \"align-items\": \"center\",\n  //       \"white-space\": \"nowrap\",\n  //       \"margin-top\": \"20px\",\n  //       \"margin-left\": \"20px\",\n  //     }}\n  //   >\n  //     <div class=\"flex flex-row justify-center align-middle items-center\">\n  //       <span>PokeBin</span>\n  //       <img\n  //         class=\"ml-1\"\n  //         src=\"/assets/favicon/android-chrome-192x192.png\"\n  //         style={{\n  //           height: \"32px\",\n  //           width: \"32px\",\n  //           \"margin-right\": \"4px\",\n  //           scale: 1.0,\n  //           opacity: 0.75,\n  //           top: \"-2px\",\n  //         }}\n  //         alt=\"It's Spheal!\"\n  //       />\n  //     </div>\n  //     <PatreonButton />\n  //   </div>\n  // );\n  return (\n    <div\n      id=\"NOCOPY\"\n      style={{\n        position: isFixed() ? \"fixed\" : \"relative\",\n        display: \"flex\",\n        bottom: bottom(),\n        \"padding-bottom\": padding(),\n        right: isFixed() ? \"30px\" : undefined, // Only set right when fixed\n        left: isFixed() ? undefined : \"30px\", // Only set left when not fixed\n        \"flex-direction\": isFixed() ? \"column\" : \"row\",\n        \"pointer-events\": \"none\",\n        \"z-index\": 9999,\n        \"transform-origin\": \"bottom right\",\n        \"user-select\": \"none\",\n        \"-webkit-user-select\": \"none\",\n        \"-moz-user-select\": \"none\",\n        \"-ms-user-select\": \"none\",\n        \"align-items\": \"center\",\n        \"white-space\": \"nowrap\",\n        width: \"100px\",\n        height: \"0px\",\n      }}\n    >\n      <img\n        src={logo}\n        style={{\n          height: height(),\n          width: width(),\n          transform: \"scale(1.5)\", // 1.5x bigger visually\n        }}\n        class=\"border-none outline-none shadow-none\"\n        alt=\"PokeBin Logo\"\n      />\n    </div>\n  );\n}\n\nexport default Watermark;\n","import type { JSX } from \"solid-js\";\nimport type { Settings } from \"./settings\";\n\ntype SettingsFormProps = {\n  settings: Settings;\n  onChange: (key: keyof Settings, value: boolean | number) => void;\n  children?: JSX.Element;\n};\n\nexport function SettingsForm(props: SettingsFormProps) {\n  return (\n    <div class=\"flex flex-col gap-2 w-80\">\n      <div class=\"flex flex-row items-center gap-4\">\n        <label for=\"newFormat\" class=\"font-medium cursor-pointer w-60\">\n          New paste format\n        </label>\n        <input\n          id=\"newFormat\"\n          name=\"newFormat\"\n          type=\"checkbox\"\n          class=\"align-middle\"\n          checked={!!props.settings.newFormat}\n          onChange={(e) => props.onChange(\"newFormat\", e.target.checked)}\n        />\n      </div>\n      <div class=\"flex flex-row items-center gap-4\">\n        <label for=\"colors\" class=\"font-medium cursor-pointer w-60\">\n          Move colors\n        </label>\n        <input\n          id=\"colors\"\n          name=\"colors\"\n          type=\"checkbox\"\n          class=\"align-middle\"\n          checked={props.settings.moveColors}\n          onChange={(e) => props.onChange(\"moveColors\", e.target.checked)}\n        />\n      </div>\n      <div class=\"flex flex-row items-center gap-4\">\n        <label for=\"twoDImages\" class=\"font-medium cursor-pointer w-60\">\n          2D images\n        </label>\n        <input\n          id=\"twoDImages\"\n          name=\"twoDImages\"\n          type=\"checkbox\"\n          class=\"align-middle\"\n          checked={props.settings.twoDImages}\n          onChange={(e) => props.onChange(\"twoDImages\", e.target.checked)}\n        />\n      </div>\n      <div class=\"flex flex-row items-center gap-4\">\n        <label for=\"darkMode\" class=\"font-medium cursor-pointer w-60\">\n          Dark Mode\n        </label>\n        <input\n          id=\"darkMode\"\n          name=\"darkMode\"\n          type=\"checkbox\"\n          class=\"align-middle\"\n          checked={props.settings.darkMode}\n          onChange={(e) => props.onChange(\"darkMode\", e.target.checked)}\n        />\n      </div>\n      <div class=\"flex flex-row items-center gap-4\">\n        <label for=\"lastViewed\" class=\"font-medium cursor-pointer w-60\">\n          Last viewed pastes count\n        </label>\n        <input\n          id=\"lastViewed\"\n          name=\"lastViewed\"\n          type=\"number\"\n          min={0}\n          max={25}\n          class=\"w-20 rounded border border-gray-300 px-2 py-1 focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white dark:bg-zinc-700 dark:text-white\"\n          value={props.settings.lastViewedCount}\n          onChange={(e) =>\n            props.onChange(\"lastViewedCount\", Number.parseInt(e.target.value))\n          }\n        />\n      </div>\n      {props.children}\n    </div>\n  );\n}\n","import { type Paste, createQRCode } from \"./web_wasm_helpers\";\nimport Watermark from \"./watermark\";\nimport { type Accessor, For, Show, createSignal } from \"solid-js\";\nimport { type Settings, updateSetting } from \"./settings\";\nimport { SettingsForm } from \"./settingsForm\";\nimport { getId } from \"./utils\";\n\ntype Props = {\n  paste: Accessor<Paste | null>;\n  setSelectable: (value: boolean, id: string) => void;\n  setShowNotes: (value: boolean) => void;\n  showNotes: () => boolean;\n  makeOpaqueOnFocus: () => void;\n  makeTransparentOnMouseover: () => void;\n  notesWidth: () => string;\n  setNotesOpacity: (value: number) => void;\n  notesOpacity: () => number;\n  copyPaste: () => Promise<void>;\n  setShowModal: (value: boolean) => void;\n  showModal: () => boolean;\n  sett: () => Settings;\n  setSett: (value: Settings) => void;\n  isEncrypted: () => boolean;\n  handleCreateOts: () => void;\n};\n\nexport default function PasteViewBase(props: Props) {\n  const paste = props.paste;\n  const setSelectable = props.setSelectable;\n  const setShowNotes = props.setShowNotes;\n  const showNotes = props.showNotes;\n  const setNotesOpacity = props.setNotesOpacity;\n  const makeOpaqueOnFocus = props.makeOpaqueOnFocus;\n  const makeTransparentOnMouseover = props.makeTransparentOnMouseover;\n  const notesWidth = props.notesWidth;\n  const notesOpacity = props.notesOpacity;\n  const copyPaste = props.copyPaste;\n  const setShowModal = props.setShowModal;\n  const showModal = props.showModal;\n  const sett = props.sett;\n  const setSett = props.setSett;\n  const isEncrypted = props.isEncrypted;\n  const handleCreateOts = props.handleCreateOts;\n\n  const [showQrModal, setShowQrModal] = createSignal(false);\n  const [qrImageUrl, setQrImageUrl] = createSignal(\"\");\n  const [copyStatus, setCopyStatus] = createSignal(\"Copy\");\n  const [working, setWorking] = createSignal(false);\n  const [screenshotStatus, setScreenshotStatus] = createSignal(\"Screenshot\");\n\n  return (\n    <Show when={paste()}>\n      {(currentPaste) => (\n        <div class=\"content-wrapper\">\n          <div class=\"side-content\" id=\"sidebar\">\n            <div class=\"sidebar-inner md:ml-10 md:mr-2\">\n              <Show\n                when={\n                  currentPaste().title !== \"\" ||\n                  currentPaste().author !== \"\" ||\n                  currentPaste().format !== \"\" ||\n                  currentPaste().rental !== \"\"\n                }\n              >\n                <div\n                  role=\"note\"\n                  class=\"metadata\"\n                  id=\"metadata\"\n                  style={{\n                    \"user-select\": \"none\",\n                    \"min-width\": \"125px\",\n                  }}\n                  onMouseOver={() => setSelectable(true, \"metadata\")}\n                  onFocus={() => setSelectable(true, \"metadata\")}\n                  onMouseOut={() => setSelectable(false, \"metadata\")}\n                  onBlur={() => setSelectable(false, \"metadata\")}\n                >\n                  <Show when={currentPaste().title !== \"\"}>\n                    <h1\n                      class=\"text-[#c2a8d4] text-2xl font-semibold\"\n                      id=\"title\"\n                      style={{ \"user-select\": \"none\" }}\n                      aria-label={currentPaste().title}\n                      innerHTML={currentPaste().title}\n                    />\n                  </Show>\n                  <Show when={currentPaste().author !== \"\"}>\n                    <p\n                      class=\"text-base\"\n                      id=\"author\"\n                      style={{ \"user-select\": \"none\" }}\n                      innerHTML={`By: ${currentPaste().author}`}\n                    />\n                  </Show>\n                  <Show when={currentPaste().format !== \"\"}>\n                    <p\n                      class=\"text-base\"\n                      id=\"format\"\n                      style={{ \"user-select\": \"none\" }}\n                    >\n                      Format: {currentPaste().format}\n                    </p>\n                  </Show>\n                  <Show when={currentPaste().rental !== \"\"}>\n                    <p\n                      class=\"text-base\"\n                      id=\"rental\"\n                      style={{ \"user-select\": \"none\" }}\n                    >\n                      Rental: {currentPaste().rental}\n                    </p>\n                  </Show>\n                </div>\n              </Show>\n              <div class=\"notes-section my-1\">\n                <Show when={currentPaste().notes !== \"\"}>\n                  <button\n                    class=\"cursor-pointer h-[30px] font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black w-[175px] mt-1 py-1 border-none rounded\"\n                    type=\"button\"\n                    onClick={() => {\n                      setShowNotes(!showNotes());\n                      const notes =\n                        document.getElementsByClassName(\"notes-content\");\n                      if (notes.length > 0) {\n                        const notes_obj = notes[0] as HTMLElement;\n                        if (notes_obj.getBoundingClientRect().top < 0) {\n                          notes_obj.style.top = \"0px\";\n                        }\n                      }\n\n                      if (showNotes()) {\n                        setNotesOpacity(1.0);\n                      }\n                    }}\n                  >\n                    {showNotes() ? \"Hide notes\" : \"Show notes\"}\n                  </button>\n                  <Show when={showNotes()}>\n                    <div\n                      role=\"note\"\n                      class=\"notes-content bg-zinc-600 border border-ccc p-5 rounded shadow-lg z-20\"\n                      onMouseOver={() => {\n                        makeOpaqueOnFocus();\n                        setSelectable(true, \"notes\");\n                      }}\n                      onFocus={() => {\n                        makeOpaqueOnFocus();\n                        setSelectable(true, \"notes\");\n                      }}\n                      onMouseOut={() => {\n                        makeTransparentOnMouseover();\n                        setSelectable(false, \"notes\");\n                      }}\n                      onBlur={() => {\n                        makeTransparentOnMouseover();\n                        setSelectable(false, \"notes\");\n                      }}\n                      style={{\n                        width: notesWidth(),\n                        opacity: notesOpacity(),\n                        \"user-select\": \"none\",\n                        \"z-index\": 2,\n                      }}\n                    >\n                      <p\n                        id=\"notes\"\n                        class=\"!text-white\"\n                        innerHTML={currentPaste().notes.replace(\n                          /\\n/g,\n                          \"<br />\",\n                        )}\n                      />\n                    </div>\n                  </Show>\n                </Show>\n              </div>\n            </div>\n            <div id=\"buttons\">\n              <div class=\"button-col\">\n                <button\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"submit\"\n                  disabled={working()}\n                  onClick={async () => {\n                    console.log(\"Fetching screenshot...\");\n                    while (true) {\n                      if (working()) return;\n                      setWorking(true);\n                      setScreenshotStatus(\"Generating...\");\n\n                      const id = getId();\n                      const evtSource = new EventSource(\n                        `/api/screenshot?id=${id}`,\n                      );\n\n                      evtSource.onmessage = (event) => {\n                        const data = JSON.parse(event.data);\n                        console.log(data);\n\n                        if (data.status === \"done\") {\n                          // Convert array to bytes →  blob\n                          const byteArray = new Uint8Array(data.data);\n                          const blob = new Blob([byteArray], {\n                            type: \"image/png\",\n                          });\n                          const url = URL.createObjectURL(blob);\n\n                          // Trigger download\n                          const a = document.createElement(\"a\");\n                          a.href = url;\n                          a.download = \"screenshot.png\";\n                          document.body.appendChild(a);\n                          a.click();\n                          document.body.removeChild(a);\n\n                          // Cleanup\n                          URL.revokeObjectURL(url);\n                          evtSource.close();\n                          setWorking(false);\n                          setScreenshotStatus(\"Screenshot\");\n                          return;\n                        }\n\n                        if (data.status === \"waiting\") {\n                          alert(\n                            \"Your screenshot is queued, don't refresh the page! Your screenshot will be automatically downloaded once ready.\",\n                          );\n                          setScreenshotStatus(\"Waiting...\");\n                        }\n                      };\n\n                      evtSource.onerror = (err) => {\n                        console.error(\"SSE error:\", err);\n                        evtSource.close();\n                        setWorking(false);\n                        setScreenshotStatus(\"Screenshot\");\n                        return;\n                      };\n                    }\n                  }}\n                  class=\"cursor-pointer w-[175px] h-[30px] copy-button font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black py-1 rounded\"\n                >\n                  {screenshotStatus()}\n                </button>\n                <button\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"submit\"\n                  onClick={async () => {\n                    await copyPaste();\n                    setCopyStatus(\"Copied!\");\n                    setTimeout(() => {\n                      setCopyStatus(\"Copy\");\n                    }, 2000);\n                  }}\n                  class=\"cursor-pointer w-[175px] h-[30px] copy-button font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black py-1 rounded\"\n                >\n                  {copyStatus()}\n                </button>\n              </div>\n              <div class=\"button-col\">\n                <button\n                  class=\"cursor-pointer h-[30px] font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black w-[175px] py-1 rounded\"\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"button\"\n                  onClick={() => setShowModal(true)}\n                >\n                  Settings\n                </button>\n                <button\n                  class=\"cursor-pointer h-[30px] font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black w-[175px] py-1 rounded\"\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"button\"\n                  onClick={async () => {\n                    const location = window.location.href;\n                    const id = location.substring(\n                      location.lastIndexOf(\"/\") + 1,\n                    );\n                    const url = `https://pokebin.com/${id}`;\n                    const imgUrl = createQRCode(url);\n                    if (imgUrl === undefined) {\n                      return;\n                    }\n                    setQrImageUrl(imgUrl);\n                    setShowQrModal(true);\n                  }}\n                >\n                  QR\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"main\">\n            <For each={currentPaste().pokemon}>\n              {(pokemon) => {\n                return (\n                  <article>\n                    <div class=\"img mr-2\">\n                      <Show when={pokemon.item_image !== \"\"}>\n                        <span class=\"img-item\" style={pokemon.item_image} />\n                      </Show>\n                      <img\n                        class=\"img-pokemon\"\n                        src={pokemon.pokemon_image}\n                        alt={pokemon.name}\n                      />\n                    </div>\n\n                    <div class=\"paste\">\n                      <div id=\"mon_title\">\n                        <Show\n                          when={pokemon.nickname !== \"\"}\n                          fallback={\n                            <>\n                              <span\n                                class={`type-${pokemon.type1} inline-element`}\n                              >\n                                {pokemon.name}\n                              </span>\n                              <Show when={pokemon.gender !== \"\"}>\n                                <span\n                                  innerHTML={` (<span class=\"inline-element gender-${pokemon.gender}\">${pokemon.gender}</span>)`}\n                                />\n                              </Show>\n                            </>\n                          }\n                        >\n                          {pokemon.nickname} (\n                          <span class={`type-${pokemon.type1} inline-element`}>\n                            {pokemon.name}\n                          </span>\n                          )\n                          <Show when={pokemon.gender !== \"\"}>\n                            <span\n                              innerHTML={` (<span class=\"inline-element gender-${pokemon.gender}\">${pokemon.gender}</span>)`}\n                            />\n                          </Show>\n                        </Show>\n                        <Show when={pokemon.item !== \"\"}>\n                          <span> @ </span>\n                          <span\n                            class=\"inline-element\"\n                            innerHTML={`${pokemon.item.trim()}`}\n                          />\n                        </Show>\n                      </div>\n\n                      <Show when={pokemon.ability !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Ability:</span> {pokemon.ability}\n                        </div>\n                      </Show>\n                      <Show when={pokemon.level !== 100}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Level:</span> {pokemon.level}\n                        </div>\n                      </Show>\n                      <Show when={pokemon.shiny !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Shiny:</span> {pokemon.shiny}\n                        </div>\n                      </Show>\n                      <Show when={pokemon.hidden_power !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Hidden Power:</span>{\" \"}\n                          <span class={`type-${pokemon.hidden_power}`}>\n                            {pokemon.hidden_power}\n                          </span>\n                        </div>\n                      </Show>\n                      <Show when={pokemon.tera_type !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Tera Type:</span>{\" \"}\n                          <span class={`type-${pokemon.tera_type}`}>\n                            {pokemon.tera_type}\n                          </span>\n                        </div>\n                      </Show>\n                      <Show when={pokemon.last_stat_ev !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">EVs: </span>\n                          <Show when={pokemon.evs[0] !== 0}>\n                            <span class=\"stat-hp\">{pokemon.evs[0]} HP</span>\n                            <Show when={pokemon.last_stat_ev !== \"hp\"}>/</Show>\n                          </Show>\n                          <Show when={pokemon.evs[1] !== 0}>\n                            <span class=\"stat-atk\">{pokemon.evs[1]} Atk</span>\n                            <Show when={pokemon.last_stat_ev !== \"atk\"}>/</Show>\n                          </Show>\n                          <Show when={pokemon.evs[2] !== 0}>\n                            <span class=\"stat-def\">{pokemon.evs[2]} Def</span>\n                            <Show when={pokemon.last_stat_ev !== \"def\"}>/</Show>\n                          </Show>\n                          <Show when={pokemon.evs[3] !== 0}>\n                            <span class=\"stat-spa\">{pokemon.evs[3]} SpA</span>\n                            <Show when={pokemon.last_stat_ev !== \"spa\"}>/</Show>\n                          </Show>\n                          <Show when={pokemon.evs[4] !== 0}>\n                            <span class=\"stat-spd\">{pokemon.evs[4]} SpD</span>\n                            <Show when={pokemon.last_stat_ev !== \"spd\"}>/</Show>\n                          </Show>\n                          <Show when={pokemon.evs[5] !== 0}>\n                            <span class=\"stat-spe\">{pokemon.evs[5]} Spe</span>\n                          </Show>\n                        </div>\n                      </Show>\n\n                      <Show when={pokemon.nature !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">{pokemon.nature}</span>\n                          <Show when={!pokemon.nature.endsWith(\" Nature\")}>\n                            <span class=\"attr\"> Nature</span>\n                          </Show>\n                        </div>\n                      </Show>\n                      <Show when={pokemon.last_stat_iv !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">IVs: </span>\n                          <Show when={pokemon.ivs[0] !== 31}>\n                            {pokemon.ivs[0]} HP\n                            <Show when={pokemon.last_stat_iv !== \"hp\"}>\n                              <span style=\"font-size: 1px;\"> </span>\n                              <span>/</span>\n                              <span style=\"font-size: 1px;\"> </span>\n                            </Show>\n                          </Show>\n                          <Show when={pokemon.ivs[1] !== 31}>\n                            {pokemon.ivs[1]} Atk\n                            <Show when={pokemon.last_stat_iv !== \"atk\"}>\n                              <span style=\"font-size: 1px;\"> </span>\n                              <span>/</span>\n                              <span style=\"font-size: 1px;\"> </span>\n                            </Show>\n                          </Show>\n                          <Show when={pokemon.ivs[2] !== 31}>\n                            {pokemon.ivs[2]} Def\n                            <Show when={pokemon.last_stat_iv !== \"def\"}>\n                              <span style=\"font-size: 1px;\"> </span>\n                              <span>/</span>\n                              <span style=\"font-size: 1px;\"> </span>\n                            </Show>\n                          </Show>\n                          <Show when={pokemon.ivs[3] !== 31}>\n                            {pokemon.ivs[3]} SpA\n                            <Show when={pokemon.last_stat_iv !== \"spa\"}>\n                              <span style=\"font-size: 1px;\"> </span>\n                              <span>/</span>\n                              <span style=\"font-size: 1px;\"> </span>\n                            </Show>\n                          </Show>\n                          <Show when={pokemon.ivs[4] !== 31}>\n                            {pokemon.ivs[4]} SpD\n                            <Show when={pokemon.last_stat_iv !== \"spd\"}>\n                              <span style=\"font-size: 1px;\"> </span>\n                              <span>/</span>\n                              <span style=\"font-size: 1px;\"> </span>\n                            </Show>\n                          </Show>\n                          <Show when={pokemon.ivs[5] !== 31}>\n                            {pokemon.ivs[5]} Spe\n                          </Show>\n                        </div>\n                      </Show>\n\n                      <For each={pokemon.moves}>\n                        {(move) => (\n                          <div class=\"move-line\">\n                            <Show\n                              when={sett().moveColors}\n                              fallback={\n                                <>\n                                  <span class={`type-${move.type1}`}>-</span>\n                                  <span style={{ color: \"white\" }}>\n                                    {\" \"}\n                                    {move.name}\n                                  </span>\n                                </>\n                              }\n                            >\n                              <span class={`type-${move.type1}`}>\n                                - {move.name}\n                              </span>\n                            </Show>\n                          </div>\n                        )}\n                      </For>\n                      <br\n                        class=\"display-none\"\n                        style={{ \"line-height\": \"0px\" }}\n                      />\n                    </div>\n                  </article>\n                );\n              }}\n            </For>\n          </div>\n          <br />\n          <Watermark />\n          <Show when={showModal()}>\n            <div\n              class=\"fixed inset-0 bg-black/20 backdrop-blur-sm flex items-center justify-center z-100 !text-white\"\n              onClick={() => setShowModal(false)}\n              onKeyDown={(e) => e.stopPropagation()}\n              tabindex=\"-1\"\n            >\n              <div\n                class=\"relative bg-zinc-800 rounded-lg p-6 max-w-lg w-full max-h-[90vh] overflow-y-auto shadow-lg\"\n                onClick={(e) => e.stopPropagation()}\n                onKeyDown={(e) => e.stopPropagation()}\n                tabindex=\"0\"\n              >\n                <button\n                  type=\"button\"\n                  class=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\"\n                  onClick={() => setShowModal(false)}\n                  aria-label=\"Close modal\"\n                >\n                  ✕\n                </button>\n                <h2 class=\"text-xl font-semibold mb-4\">Settings</h2>\n                <SettingsForm\n                  settings={sett()}\n                  onChange={(key, value) => {\n                    updateSetting(key, value, sett, setSett);\n                  }}\n                >\n                  <Show when={!currentPaste().isOts && !isEncrypted()}>\n                    <div class=\"flex flex-row gap-4 align-middle mt-2\">\n                      <button\n                        type=\"button\"\n                        onClick={handleCreateOts}\n                        class=\"bg-[#c2a8d4] hover:bg-[#9770b6] text-black px-4 py-0 rounded text-base font-bold\"\n                      >\n                        Create OTS\n                      </button>\n                    </div>\n                  </Show>\n                </SettingsForm>\n              </div>\n            </div>\n          </Show>\n          <Show when={showQrModal()}>\n            <div\n              class=\"fixed inset-0 bg-black/40 flex items-center justify-center z-200\"\n              onKeyDown={(e) => e.stopPropagation()}\n              onClick={() => {\n                setShowQrModal(false);\n                // Clean up the object URL\n                URL.revokeObjectURL(qrImageUrl());\n                setQrImageUrl(\"\");\n              }}\n              tabindex=\"-1\"\n            >\n              <div\n                class=\"bg-white rounded-lg p-6 shadow-lg relative\"\n                onClick={(e) => e.stopPropagation()}\n                onKeyDown={(e) => e.stopPropagation()}\n                tabindex=\"0\"\n              >\n                <button\n                  type=\"button\"\n                  class=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700\"\n                  onClick={() => {\n                    setShowQrModal(false);\n                    URL.revokeObjectURL(qrImageUrl());\n                    setQrImageUrl(\"\");\n                  }}\n                  aria-label=\"Close QR modal\"\n                >\n                  ✕\n                </button>\n                <img\n                  id=\"qr-code\"\n                  src={qrImageUrl()}\n                  alt=\"QR Code\"\n                  class=\"max-w-full max-h-[60vh] mx-auto\"\n                />\n              </div>\n            </div>\n          </Show>\n        </div>\n      )}\n    </Show>\n  );\n}\n","import { type Paste, createQRCode } from \"./web_wasm_helpers\";\nimport Watermark from \"./watermark\";\nimport { type Accessor, createSignal, For, Show } from \"solid-js\";\nimport { updateSetting, type Settings } from \"./settings\";\nimport { SettingsForm } from \"./settingsForm\";\nimport { getId } from \"./utils\";\n\ntype Props = {\n  paste: Accessor<Paste | null>;\n  setSelectable: (value: boolean, id: string) => void;\n  setShowNotes: (value: boolean) => void;\n  showNotes: () => boolean;\n  makeOpaqueOnFocus: () => void;\n  makeTransparentOnMouseover: () => void;\n  notesWidth: () => string;\n  setNotesOpacity: (value: number) => void;\n  notesOpacity: () => number;\n  copyPaste: () => Promise<void>;\n  setShowModal: (value: boolean) => void;\n  showModal: () => boolean;\n  sett: () => Settings;\n  setSett: (value: Settings) => void;\n  isEncrypted: () => boolean;\n  handleCreateOts: () => void;\n};\n\nexport default function PasteViewNew(props: Props) {\n  const paste = props.paste;\n  const setSelectable = props.setSelectable;\n  const setShowNotes = props.setShowNotes;\n  const showNotes = props.showNotes;\n  const setNotesOpacity = props.setNotesOpacity;\n  const makeOpaqueOnFocus = props.makeOpaqueOnFocus;\n  const makeTransparentOnMouseover = props.makeTransparentOnMouseover;\n  const notesWidth = props.notesWidth;\n  const notesOpacity = props.notesOpacity;\n  const copyPaste = props.copyPaste;\n  const setShowModal = props.setShowModal;\n  const showModal = props.showModal;\n  const sett = props.sett;\n  const setSett = props.setSett;\n  const isEncrypted = props.isEncrypted;\n  const handleCreateOts = props.handleCreateOts;\n\n  const [working, setWorkingValue] = createSignal(false);\n\n  const [showQrModal, setShowQrModal] = createSignal(false);\n  const [qrImageUrl, setQrImageUrl] = createSignal(\"\");\n  const [copyStatus, setCopyStatus] = createSignal(\"Copy\");\n  const [screenshotStatus, setScreenshotStatusValue] =\n    createSignal(\"Screenshot\");\n\n  function setWorking(working: boolean) {\n    setWorkingValue(working);\n  }\n\n  function setScreenshotStatus(status: string) {\n    setScreenshotStatusValue(status);\n  }\n\n  return (\n    <Show when={paste()}>\n      {(currentPaste) => (\n        <div class=\"content-wrapper\">\n          <div class=\"side-content\" id=\"sidebar\">\n            <div class=\"sidebar-inner md:ml-10 md:mr-2\">\n              <Show\n                when={\n                  currentPaste().title !== \"\" ||\n                  currentPaste().author !== \"\" ||\n                  currentPaste().format !== \"\" ||\n                  currentPaste().rental !== \"\"\n                }\n              >\n                <div\n                  role=\"note\"\n                  class=\"metadata\"\n                  id=\"metadata\"\n                  style={{\n                    \"user-select\": \"none\",\n                    \"min-width\": \"125px\",\n                  }}\n                  onMouseOver={() => setSelectable(true, \"metadata\")}\n                  onFocus={() => setSelectable(true, \"metadata\")}\n                  onMouseOut={() => setSelectable(false, \"metadata\")}\n                  onBlur={() => setSelectable(false, \"metadata\")}\n                >\n                  <Show when={currentPaste().title !== \"\"}>\n                    <h1\n                      class=\"text-[#c2a8d4] text-2xl font-semibold\"\n                      id=\"title\"\n                      style={{ \"user-select\": \"none\" }}\n                      aria-label={currentPaste().title}\n                      innerHTML={currentPaste().title}\n                    />\n                  </Show>\n                  <Show when={currentPaste().author !== \"\"}>\n                    <p\n                      class=\"text-base\"\n                      id=\"author\"\n                      style={{ \"user-select\": \"none\" }}\n                      innerHTML={`By: ${currentPaste().author}`}\n                    />\n                  </Show>\n                  <Show when={currentPaste().format !== \"\"}>\n                    <p\n                      class=\"text-base\"\n                      id=\"format\"\n                      style={{ \"user-select\": \"none\" }}\n                    >\n                      Format: {currentPaste().format}\n                    </p>\n                  </Show>\n                  <Show when={currentPaste().rental !== \"\"}>\n                    <p\n                      class=\"text-base\"\n                      id=\"rental\"\n                      style={{ \"user-select\": \"none\" }}\n                    >\n                      Rental: {currentPaste().rental}\n                    </p>\n                  </Show>\n                </div>\n              </Show>\n              <div class=\"notes-section my-1\">\n                <Show when={currentPaste().notes !== \"\"}>\n                  <button\n                    class=\"cursor-pointer h-[30px] font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black w-[175px] mt-1 py-1 border-none rounded\"\n                    type=\"button\"\n                    onClick={() => {\n                      setShowNotes(!showNotes());\n                      const notes =\n                        document.getElementsByClassName(\"notes-content\");\n                      if (notes.length > 0) {\n                        const notes_obj = notes[0] as HTMLElement;\n                        if (notes_obj.getBoundingClientRect().top < 0) {\n                          notes_obj.style.top = \"0px\";\n                        }\n                      }\n\n                      if (showNotes()) {\n                        setNotesOpacity(1.0);\n                      }\n                    }}\n                  >\n                    {showNotes() ? \"Hide notes\" : \"Show notes\"}\n                  </button>\n                  <Show when={showNotes()}>\n                    <div\n                      role=\"note\"\n                      class=\"notes-content bg-zinc-600 border border-ccc p-5 rounded shadow-lg z-20\"\n                      onMouseOver={() => {\n                        makeOpaqueOnFocus();\n                        setSelectable(true, \"notes\");\n                      }}\n                      onFocus={() => {\n                        makeOpaqueOnFocus();\n                        setSelectable(true, \"notes\");\n                      }}\n                      onMouseOut={() => {\n                        makeTransparentOnMouseover();\n                        setSelectable(false, \"notes\");\n                      }}\n                      onBlur={() => {\n                        makeTransparentOnMouseover();\n                        setSelectable(false, \"notes\");\n                      }}\n                      style={{\n                        width: notesWidth(),\n                        opacity: notesOpacity(),\n                        \"user-select\": \"none\",\n                        \"z-index\": 2,\n                      }}\n                    >\n                      <p\n                        id=\"notes\"\n                        class=\"!text-white\"\n                        innerHTML={currentPaste().notes.replace(\n                          /\\n/g,\n                          \"<br />\",\n                        )}\n                      />\n                    </div>\n                  </Show>\n                </Show>\n              </div>\n            </div>\n            <div id=\"buttons\">\n              <div class=\"button-col\">\n                <button\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"submit\"\n                  disabled={working()}\n                  onClick={async () => {\n                    console.log(\"Fetching screenshot...\");\n                    while (true) {\n                      if (working()) return;\n                      setWorking(true);\n                      setScreenshotStatus(\"Generating...\");\n\n                      const id = getId();\n                      const evtSource = new EventSource(\n                        `/api/screenshot?id=${id}`,\n                      );\n\n                      evtSource.onmessage = (event) => {\n                        const data = JSON.parse(event.data);\n                        console.log(data);\n\n                        if (data.status === \"done\") {\n                          // Convert array to bytes →  blob\n                          const byteArray = new Uint8Array(data.data);\n                          const blob = new Blob([byteArray], {\n                            type: \"image/png\",\n                          });\n                          const url = URL.createObjectURL(blob);\n\n                          // Trigger download\n                          const a = document.createElement(\"a\");\n                          a.href = url;\n                          a.download = \"screenshot.png\";\n                          document.body.appendChild(a);\n                          a.click();\n                          document.body.removeChild(a);\n\n                          // Cleanup\n                          URL.revokeObjectURL(url);\n                          evtSource.close();\n                          setWorking(false);\n                          setScreenshotStatus(\"Screenshot\");\n                          return;\n                        }\n\n                        if (data.status === \"waiting\") {\n                          alert(\n                            \"Your screenshot is queued, don't refresh the page! Your screenshot will be automatically downloaded once ready.\",\n                          );\n                          setScreenshotStatus(\"Waiting...\");\n                        }\n                      };\n\n                      evtSource.onerror = (err) => {\n                        console.error(\"SSE error:\", err);\n                        evtSource.close();\n                        setWorking(false);\n                        setScreenshotStatus(\"Screenshot\");\n                        return;\n                      };\n                    }\n                  }}\n                  class=\"cursor-pointer w-[175px] h-[30px] copy-button font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black py-1 rounded\"\n                >\n                  {screenshotStatus()}\n                </button>\n\n                <button\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"submit\"\n                  onClick={async () => {\n                    await copyPaste();\n                    setCopyStatus(\"Copied!\");\n                    setTimeout(() => {\n                      setCopyStatus(\"Copy\");\n                    }, 2000);\n                  }}\n                  class=\"cursor-pointer w-[175px] h-[30px] copy-button font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black py-1 rounded\"\n                >\n                  {copyStatus()}\n                </button>\n              </div>\n              <div class=\"button-col\">\n                <button\n                  class=\"cursor-pointer h-[30px] font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black w-[175px] py-1 rounded\"\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"button\"\n                  onClick={() => setShowModal(true)}\n                >\n                  Settings\n                </button>\n                <button\n                  class=\"cursor-pointer h-[30px] font-bold bg-[#c2a8d4] hover:bg-[#9770b6] text-black w-[175px] py-1 rounded\"\n                  style={{ \"user-select\": \"none\" }}\n                  type=\"button\"\n                  onClick={async () => {\n                    const location = window.location.href;\n                    const id = location.substring(\n                      location.lastIndexOf(\"/\") + 1,\n                    );\n                    const url = `https://pokebin.com/${id}`;\n                    const imgUrl = createQRCode(url);\n                    if (imgUrl === undefined) {\n                      return;\n                    }\n                    setQrImageUrl(imgUrl);\n                    setShowQrModal(true);\n                  }}\n                >\n                  QR\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"main\">\n            <For each={currentPaste().pokemon}>\n              {(pokemon) => {\n                const stats: string[] = pokemon.evs.map((x) =>\n                  x !== 0 ? x.toString() : \"\",\n                );\n                let allEmpty = true;\n                for (const stat of stats) {\n                  if (stat !== \"\") {\n                    allEmpty = false;\n                  }\n                }\n                // const nature = pokemon.nature;\n                // if (natureMap[nature] !== null) {\n                //   const indicies = natureMap[nature];\n                //   const increasingIdx = indicies[0];\n                //   const decreasingIdx = indicies[1];\n                //   stats[increasingIdx] = `${stats[increasingIdx]}+`;\n                //   stats[decreasingIdx] = `${stats[decreasingIdx]}-`;\n                //   let last_stat_idx = 0;\n                //   for (let i = 0; i < stats.length; i++) {\n                //     const stat = stats[i];\n                //     if (stat !== \"\") {\n                //       last_stat_idx = i;\n                //     }\n                //   }\n                //   switch (last_stat_idx) {\n                //     case 0:\n                //       pokemon.last_stat_ev = \"hp\";\n                //       break;\n                //     case 1:\n                //       pokemon.last_stat_ev = \"atk\";\n                //       break;\n                //     case 2:\n                //       pokemon.last_stat_ev = \"def\";\n                //       break;\n                //     case 3:\n                //       pokemon.last_stat_ev = \"spa\";\n                //       break;\n                //     case 4:\n                //       pokemon.last_stat_ev = \"spd\";\n                //       break;\n                //     case 5:\n                //       pokemon.last_stat_ev = \"spe\";\n                //       break;\n                //     default:\n                //       pokemon.last_stat_ev = \"\";\n                //       break;\n                //   }\n                // }\n                return (\n                  <article>\n                    <div class=\"img mr-2\">\n                      <Show when={pokemon.item_image !== \"\"}>\n                        <span class=\"img-item\" style={pokemon.item_image} />\n                      </Show>\n                      <img\n                        class=\"img-pokemon\"\n                        src={pokemon.pokemon_image}\n                        alt={pokemon.name}\n                      />\n                    </div>\n\n                    <div class=\"paste\">\n                      <div id=\"mon_title\">\n                        <Show\n                          when={pokemon.nickname !== \"\"}\n                          fallback={\n                            <>\n                              <span\n                                class={`type-${pokemon.type1} inline-element`}\n                              >\n                                {pokemon.name}\n                              </span>\n                              <Show when={pokemon.gender !== \"\"}>\n                                <span\n                                  innerHTML={` (<span class=\"inline-element gender-${pokemon.gender}\">${pokemon.gender}</span>)`}\n                                />\n                              </Show>\n                            </>\n                          }\n                        >\n                          {pokemon.nickname} (\n                          <span class={`type-${pokemon.type1} inline-element`}>\n                            {pokemon.name}\n                          </span>\n                          )\n                          <Show when={pokemon.gender !== \"\"}>\n                            <span\n                              innerHTML={` (<span class=\"inline-element gender-${pokemon.gender}\">${pokemon.gender}</span>)`}\n                            />\n                          </Show>\n                        </Show>\n                      </div>\n                      <Show\n                        when={pokemon.ability !== \"\" || pokemon.item !== \"\"}\n                      >\n                        <div class=\"attribute-line\">\n                          <Show when={pokemon.ability !== \"\"}>\n                            <span>[{pokemon.ability}]</span>\n                          </Show>\n                          <Show when={pokemon.item !== \"\"}>\n                            <span> @ </span>\n                            <span\n                              class=\"inline-element\"\n                              innerHTML={`${pokemon.item.trim()}`}\n                            />\n                          </Show>\n                        </div>\n                      </Show>\n                      <For each={pokemon.moves}>\n                        {(move) => (\n                          <div class=\"move-line\">\n                            <Show\n                              when={sett().moveColors}\n                              fallback={\n                                <>\n                                  <span class={`type-${move.type1}`}>-</span>\n                                  <span style={{ color: \"white\" }}>\n                                    {\" \"}\n                                    {move.name}\n                                  </span>\n                                </>\n                              }\n                            >\n                              <span class={`type-${move.type1}`}>\n                                - {move.name}\n                              </span>\n                            </Show>\n                          </div>\n                        )}\n                      </For>\n                      <Show when={!currentPaste().isOts && !allEmpty}>\n                        <div class=\"attribute-line\">\n                          <span>EVs: </span>\n                          <Show when={stats[0] !== \"\"}>\n                            <span class=\"stat-hp\">{stats[0]} HP</span>\n                            <Show when={pokemon.last_stat_ev !== \"hp\"}>/</Show>\n                          </Show>\n                          <Show when={stats[1] !== \"\"}>\n                            <span class=\"stat-atk\">{stats[1]} Atk</span>\n                            <Show when={pokemon.last_stat_ev !== \"atk\"}>/</Show>\n                          </Show>\n                          <Show when={stats[2] !== \"\"}>\n                            <span class=\"stat-def\">{stats[2]} Def</span>\n                            <Show when={pokemon.last_stat_ev !== \"def\"}>/</Show>\n                          </Show>\n                          <Show when={stats[3] !== \"\"}>\n                            <span class=\"stat-spa\">{stats[3]} SpA</span>\n                            <Show when={pokemon.last_stat_ev !== \"spa\"}>/</Show>\n                          </Show>\n                          <Show when={stats[4] !== \"\"}>\n                            <span class=\"stat-spd\">{stats[4]} SpD</span>\n                            <Show when={pokemon.last_stat_ev !== \"spd\"}>/</Show>\n                          </Show>\n                          <Show when={stats[5] !== \"\"}>\n                            <span class=\"stat-spe\">{stats[5]} Spe</span>\n                          </Show>\n                        </div>\n                        <Show when={pokemon.nature !== \"\"}>\n                          <Show when={pokemon.nature.endsWith(\"Nature\")}>\n                            <div class=\"attribute-line\">\n                              <span>{pokemon.nature}</span>\n                            </div>\n                          </Show>\n                          <Show when={!pokemon.nature.endsWith(\"Nature\")}>\n                            <div class=\"attribute-line\">\n                              <span>{pokemon.nature} Nature</span>\n                            </div>\n                          </Show>\n                        </Show>\n                        <Show when={pokemon.last_stat_iv !== \"\"}>\n                          <div class=\"attribute-line\">\n                            <span>IVs: </span>\n                            <Show when={pokemon.ivs[0] !== 31}>\n                              <span>{pokemon.ivs[0]} HP</span>\n                              <Show when={pokemon.last_stat_iv !== \"hp\"}>\n                                <span style=\"font-size: 1px;\"> </span>\n                                <span>/</span>\n                                <span style=\"font-size: 1px;\"> </span>\n                              </Show>\n                            </Show>\n                            <Show when={pokemon.ivs[1] !== 31}>\n                              <span>{pokemon.ivs[1]} Atk</span>\n                              <Show when={pokemon.last_stat_iv !== \"atk\"}>\n                                <span style=\"font-size: 1px;\"> </span>\n                                <span>/</span>\n                                <span style=\"font-size: 1px;\"> </span>\n                              </Show>\n                            </Show>\n                            <Show when={pokemon.ivs[2] !== 31}>\n                              <span>{pokemon.ivs[2]} Def</span>\n                              <Show when={pokemon.last_stat_iv !== \"def\"}>\n                                <span style=\"font-size: 1px;\"> </span>\n                                <span>/</span>\n                                <span style=\"font-size: 1px;\"> </span>\n                              </Show>\n                            </Show>\n                            <Show when={pokemon.ivs[3] !== 31}>\n                              <span>{pokemon.ivs[3]} SpA</span>\n                              <Show when={pokemon.last_stat_iv !== \"spa\"}>\n                                <span style=\"font-size: 1px;\"> </span>\n                                <span>/</span>\n                                <span style=\"font-size: 1px;\"> </span>\n                              </Show>\n                            </Show>\n                            <Show when={pokemon.ivs[4] !== 31}>\n                              <span>{pokemon.ivs[4]} SpD</span>\n                              <Show when={pokemon.last_stat_iv !== \"spd\"}>\n                                <span style=\"font-size: 1px;\"> </span>\n                                <span>/</span>\n                                <span style=\"font-size: 1px;\"> </span>\n                              </Show>\n                            </Show>\n                            <Show when={pokemon.ivs[5] !== 31}>\n                              <span>{pokemon.ivs[5]} Spe</span>\n                            </Show>\n                          </div>\n                        </Show>\n                      </Show>\n\n                      <Show when={pokemon.level !== 100}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Level:</span> {pokemon.level}\n                        </div>\n                      </Show>\n                      <Show when={pokemon.shiny !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Shiny:</span> {pokemon.shiny}\n                        </div>\n                      </Show>\n                      <Show when={pokemon.hidden_power !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Hidden Power:</span>{\" \"}\n                          <span class={`type-${pokemon.hidden_power}`}>\n                            {pokemon.hidden_power}\n                          </span>\n                        </div>\n                      </Show>\n                      <Show when={pokemon.tera_type !== \"\"}>\n                        <div class=\"attribute-line\">\n                          <span class=\"attr\">Tera Type:</span>{\" \"}\n                          <span class={`type-${pokemon.tera_type}`}>\n                            {pokemon.tera_type}\n                          </span>\n                        </div>\n                      </Show>\n                      <br\n                        class=\"display-none\"\n                        style={{ \"line-height\": \"-10px\" }}\n                      />\n                    </div>\n                  </article>\n                );\n              }}\n            </For>\n          </div>\n          <br />\n          <Watermark />\n          <Show when={showModal()}>\n            <div\n              class=\"fixed inset-0 bg-black/20 backdrop-blur-sm flex items-center justify-center z-100 !text-white\"\n              onClick={() => setShowModal(false)}\n              onKeyDown={(e) => e.stopPropagation()}\n              tabindex=\"-1\"\n            >\n              <div\n                class=\"relative bg-zinc-800 rounded-lg p-6 max-w-lg w-full max-h-[90vh] overflow-y-auto shadow-lg\"\n                onClick={(e) => e.stopPropagation()}\n                onKeyDown={(e) => e.stopPropagation()}\n                tabindex=\"0\"\n              >\n                <button\n                  type=\"button\"\n                  class=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\"\n                  onClick={() => setShowModal(false)}\n                  aria-label=\"Close modal\"\n                >\n                  ✕\n                </button>\n                <h2 class=\"text-xl font-semibold mb-4\">Settings</h2>\n                <SettingsForm\n                  settings={sett()}\n                  onChange={(key, value) => {\n                    updateSetting(key, value, sett, setSett);\n                  }}\n                >\n                  <Show when={!currentPaste().isOts && !isEncrypted()}>\n                    <div class=\"flex flex-row gap-4 align-middle mt-2\">\n                      <button\n                        type=\"button\"\n                        onClick={handleCreateOts}\n                        class=\"bg-[#c2a8d4] hover:bg-[#9770b6] text-black px-4 py-0 rounded text-base font-bold\"\n                      >\n                        Create OTS\n                      </button>\n                    </div>\n                  </Show>\n                </SettingsForm>\n              </div>\n            </div>\n          </Show>\n          <Show when={showQrModal()}>\n            <div\n              class=\"fixed inset-0 bg-black/40 flex items-center justify-center z-200\"\n              onKeyDown={(e) => e.stopPropagation()}\n              onClick={() => {\n                setShowQrModal(false);\n                // Clean up the object URL\n                URL.revokeObjectURL(qrImageUrl());\n                setQrImageUrl(\"\");\n              }}\n              tabindex=\"-1\"\n            >\n              <div\n                class=\"bg-white rounded-lg p-6 shadow-lg relative\"\n                onClick={(e) => e.stopPropagation()}\n                onKeyDown={(e) => e.stopPropagation()}\n                tabindex=\"0\"\n              >\n                <button\n                  type=\"button\"\n                  class=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700\"\n                  onClick={() => {\n                    setShowQrModal(false);\n                    URL.revokeObjectURL(qrImageUrl());\n                    setQrImageUrl(\"\");\n                  }}\n                  aria-label=\"Close QR modal\"\n                >\n                  ✕\n                </button>\n                <img\n                  id=\"qr-code\"\n                  src={qrImageUrl()}\n                  alt=\"QR Code\"\n                  class=\"max-w-full max-h-[60vh] mx-auto\"\n                />\n              </div>\n            </div>\n          </Show>\n        </div>\n      )}\n    </Show>\n  );\n}\n","import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  onMount,\n  Switch,\n  Match,\n} from \"solid-js\";\nimport \"./app.css\";\nimport \"./paste.css\";\nimport { decrypt, initWasm } from \"./wasm_helpers\";\n\nimport {\n  initWasm as initWebWasm,\n  parsePaste,\n  type Paste,\n  utf8ToBase64,\n  SavePasteToLastVisited,\n} from \"./web_wasm_helpers\";\n\nimport { initSettings } from \"./settings\";\nimport PasteViewBase from \"./PasteViewBase\";\nimport PasteViewNew from \"./PasteViewNew\";\nimport { getId } from \"./utils\";\n\nfunction stripIvsEvs(pasteText: string): string {\n  // Remove lines that start with \"IVs:\" or \"EVs:\" (case-insensitive, optional whitespace)\n  return pasteText\n    .split(\"\\n\")\n    .filter((line) => !/^\\s*(IVs:|EVs:)/i.test(line))\n    .join(\"\\n\");\n}\n\nconst PasteView = () => {\n  const [paste, setPaste] = createSignal<Paste | null>(null);\n  const [isEncrypted, setIsEncrypted] = createSignal(false);\n  const [data, setData] = createSignal(\"\");\n  const [title, setTitle] = createSignal<string | null>(null);\n  const [showNotes, setShowNotes] = createSignal(false);\n  const [notesOpacity, setNotesOpacity] = createSignal(1.0);\n  const [notesWidth, setNotesWidth] = createSignal(\"300px\");\n  const [showModal, setShowModal] = createSignal(false);\n\n  function updateThemeColor(darkMode: boolean) {\n    const meta = document.getElementById(\"theme-color-meta\");\n    if (meta) {\n      meta.setAttribute(\"content\", darkMode ? \"#000000\" : \"#f9f9f9\");\n    }\n  }\n\n  type PasteUpload = {\n    title: string;\n    author: string;\n    notes: string;\n    format: string;\n    rental: string;\n    content: string;\n  };\n  type FormUpload = {\n    data: PasteUpload;\n    encrypted: boolean;\n  };\n\n  async function handleCreateOts() {\n    if (isEncrypted()) return;\n    // Get the original paste text (from your `data` signal)\n    const originalPaste = data();\n    if (!originalPaste) return;\n\n    // If the paste is encrypted, you may need to handle that separately.\n    // For now, assume it's plain text or JSON string.\n    let pasteObj: FormUpload;\n    try {\n      pasteObj = { encrypted: false, data: JSON.parse(originalPaste) };\n    } catch {\n      return;\n    }\n\n    // Remove IVs/EVs from the content\n    pasteObj.data.content = stripIvsEvs(pasteObj.data.content);\n\n    // Prepare form data\n    const form = document.createElement(\"form\");\n    form.method = \"POST\";\n    form.action = \"/create\";\n    form.style.display = \"none\";\n\n    // Helper to add a field\n    function addField(name: string, value: string) {\n      const input = document.createElement(\"input\");\n      input.type = \"hidden\";\n      input.name = name;\n      input.value = value;\n      form.appendChild(input);\n    }\n\n    // Add all relevant fields\n    const encoded = utf8ToBase64(JSON.stringify(pasteObj));\n    addField(\"data\", encoded);\n\n    document.body.appendChild(form);\n    form.submit();\n  }\n\n  const { sett, setSett } = initSettings();\n\n  function makeTransparentOnMouseover() {\n    setNotesOpacity(0.2);\n  }\n\n  function makeOpaqueOnFocus() {\n    setNotesOpacity(1.0);\n  }\n\n  function decodeHtmlEntities(str: string): string {\n    const txt = document.createElement(\"textarea\");\n    txt.innerHTML = str;\n    const decoded = txt.value;\n    txt.remove(); // remove from DOM (if it was ever attached)\n    return decoded;\n  }\n\n  function updateWidths() {\n    const main = document.getElementsByTagName(\"main\")[0];\n    const sidebar = document.getElementById(\"sidebar\");\n    const notes = document.getElementById(\"notes\");\n\n    if (!main && !sidebar && !notes) return;\n\n    const articles = document.getElementsByTagName(\"article\");\n    let end = articles.length;\n    if (articles.length > 4) {\n      end = 4;\n    }\n\n    const windowWidth = window.innerWidth;\n    for (let i = 0; i < end; i++) {\n      if (windowWidth > 1024) {\n        const margin_bottom = Math.floor(window.innerHeight * 0.02);\n        articles[i].style.marginBottom = `${margin_bottom}px`;\n      }\n    }\n\n    if (windowWidth <= 1024) {\n      // Mobile layout\n      setNotesWidth(\"300px\");\n    } else {\n      // Desktop layout\n      const calculatedWidth = windowWidth - 420;\n      const width = Math.min(Math.max(calculatedWidth, 300), 600);\n      setNotesWidth(`${width}px`);\n    }\n  }\n\n  function setSelectable(value: boolean, id: string) {\n    const element = document.getElementById(id);\n    if (element === null) {\n      return;\n    }\n\n    // First update the style\n    if (value) {\n      element.style.userSelect = \"text\";\n    } else {\n      element.style.userSelect = \"auto\";\n    }\n\n    // Set the style to be selectable for ALL children recursively\n    const children = element.children;\n\n    const children_list = [];\n\n    for (let i = 0; i < children.length; i++) {\n      children_list.push(children[i]);\n    }\n    while (children_list.length > 0) {\n      const child = children_list.pop() as HTMLElement;\n      if (child === null || child === undefined) {\n        break;\n      }\n\n      // Add all children to the list\n      for (let i = 0; i < child.children.length; i++) {\n        children_list.push(child.children[i]);\n      }\n      if (value) {\n        // Set the style to be unselectable\n        for (let i = 0; i < children.length; i++) {\n          child.style.userSelect = \"auto\";\n        }\n      } else {\n        for (let i = 0; i < children.length; i++) {\n          child.style.userSelect = \"none\";\n        }\n      }\n    }\n  }\n\n  async function copyPasteBase() {\n    console.log(\"Copying paste to clipboard...\");\n    const main = document.getElementsByClassName(\"main\")[0];\n\n    if (!main) {\n      return;\n    }\n\n    let text = \"\";\n    const articles = main.querySelectorAll(\"article\");\n\n    articles.forEach((article, _) => {\n      const monTitle = article.querySelector(\"#mon_title\");\n      if (monTitle) {\n        text += `${monTitle.textContent?.trim()}\\n`;\n      }\n\n      // Extract ability, level, shiny, tera type, etc.\n      const attributeDivs = article.querySelectorAll(\".attribute-line\");\n      attributeDivs.forEach((div, _) => {\n        text += `${div.textContent?.trim()}\\n`;\n      });\n\n      const moves = article.querySelectorAll(\".move-line\");\n      moves.forEach((move, _) => {\n        text += `${move.textContent?.trim()}\\n`;\n      });\n\n      text += \"\\n\"; // Add a newline between Pokemon entries\n    });\n\n    // Copy the data to the clipboard.\n    console.log(text.trim());\n    await navigator.clipboard.writeText(text.trim());\n    console.log(\"Paste copied to clipboard.\");\n  }\n\n  async function copyPasteNew() {\n    console.log(\"Copying paste to clipboard...\");\n    const main = document.getElementsByClassName(\"main\")[0];\n\n    if (!main) {\n      return;\n    }\n\n    let text = \"\";\n    const articles = main.querySelectorAll(\"article\");\n\n    articles.forEach((article, _) => {\n      const monTitle = article.querySelector(\"#mon_title\");\n      if (monTitle) {\n        text += `${monTitle.textContent?.trim()}\\n`;\n      }\n\n      const abilityItem = article.querySelector(\"#ability-item\");\n      if (abilityItem) {\n        text += `${abilityItem.textContent?.trim()}\\n`;\n      }\n\n      const moves = article.querySelectorAll(\".move-line\");\n      moves.forEach((move, _) => {\n        text += `${move.textContent?.trim()}\\n`;\n      });\n\n      // Extract ability, level, shiny, tera type, etc.\n      const attributeDivs = article.querySelectorAll(\".attribute-line\");\n      attributeDivs.forEach((div, _) => {\n        text += `${div.textContent?.trim()}\\n`;\n      });\n\n      text += \"\\n\"; // Add a newline between Pokemon entries\n    });\n\n    // Copy the data to the clipboard.\n    console.log(text.trim());\n    await navigator.clipboard.writeText(text.trim());\n    console.log(\"Paste copied to clipboard.\");\n  }\n\n  // Update document title when title changes\n  createEffect(() => {\n    const currentTitle = title();\n    if (currentTitle) {\n      document.title = decodeHtmlEntities(currentTitle);\n    }\n\n    window.addEventListener(\"resize\", updateWidths);\n  });\n\n  createEffect(() => {\n    // Only run if data is loaded\n    if (!data()) return;\n    // Re-parse with the current twoDImages setting\n    const parsedPaste = parsePaste(data(), sett().twoDImages);\n    setPaste(parsedPaste);\n    if (parsedPaste) {\n      setTitle(parsedPaste.title);\n    }\n  });\n\n  function darkModeToggle() {\n    const body = document.getElementsByTagName(\"body\")[0];\n    if (sett().darkMode) {\n      body.classList.add(\"dark\");\n      body.classList.remove(\"light\");\n    } else {\n      body.classList.add(\"light\");\n      body.classList.remove(\"dark\");\n    }\n    updateThemeColor(sett().darkMode);\n  }\n\n  createEffect(() => {\n    darkModeToggle();\n  });\n\n  onMount(async () => {\n    const id = getId();\n    const response = await fetch(`/${id}/json`);\n    const json = await response.json();\n\n    await initWasm();\n    await initWebWasm();\n    const wsUrl = \"/ws\";\n    const socket = new WebSocket(wsUrl);\n    socket.onopen = async () => {\n      console.log(\"WebSocket connected to:\", wsUrl);\n    };\n\n    if (json.encrypted) {\n      setIsEncrypted(true);\n      // Get user input via popup.\n      let done = false;\n      let promptMsg = \"Enter password\";\n      while (!done) {\n        let passkey = prompt(promptMsg, \"\");\n        while (passkey === \"\" || passkey === null) {\n          promptMsg = \"Enter password\";\n          passkey = prompt(promptMsg, \"\");\n        }\n        const decrypted = decrypt(json.data, passkey as string);\n        if (decrypted == null) {\n          promptMsg = \"Invalid password\";\n        } else {\n          setData(decrypted);\n          done = true;\n        }\n      }\n    } else {\n      setData(JSON.stringify(json.data));\n    }\n\n    darkModeToggle();\n\n    window.addEventListener(\"resize\", updateWidths);\n    updateWidths();\n\n    onCleanup(() => {\n      window.removeEventListener(\"resize\", updateWidths);\n    });\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        setShowModal(false);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    onCleanup(() => window.removeEventListener(\"keydown\", handleKeyDown));\n\n    const root = document.getElementById(\"root\");\n    if (root) {\n      if (root.clientHeight <= window.innerHeight) {\n        root.style.overflowY = \"hidden\";\n      }\n    }\n\n    const paste_value = paste();\n    if (paste_value !== null) {\n      SavePasteToLastVisited(sett, setSett, paste_value);\n    }\n  });\n\n  return (\n    <Switch>\n      <Match when={sett().newFormat}>\n        <PasteViewNew\n          paste={paste}\n          setShowModal={setShowModal}\n          setSelectable={setSelectable}\n          setShowNotes={setShowNotes}\n          showNotes={showNotes}\n          makeOpaqueOnFocus={makeOpaqueOnFocus}\n          makeTransparentOnMouseover={makeTransparentOnMouseover}\n          notesWidth={notesWidth}\n          setNotesOpacity={setNotesOpacity}\n          notesOpacity={notesOpacity}\n          copyPaste={copyPasteNew}\n          showModal={showModal}\n          sett={sett}\n          setSett={setSett}\n          isEncrypted={isEncrypted}\n          handleCreateOts={handleCreateOts}\n        />\n      </Match>\n      <Match when={!sett().newFormat}>\n        <PasteViewBase\n          paste={paste}\n          setShowModal={setShowModal}\n          setSelectable={setSelectable}\n          setShowNotes={setShowNotes}\n          showNotes={showNotes}\n          makeOpaqueOnFocus={makeOpaqueOnFocus}\n          makeTransparentOnMouseover={makeTransparentOnMouseover}\n          notesWidth={notesWidth}\n          setNotesOpacity={setNotesOpacity}\n          notesOpacity={notesOpacity}\n          copyPaste={copyPasteBase}\n          showModal={showModal}\n          sett={sett}\n          setSett={setSett}\n          isEncrypted={isEncrypted}\n          handleCreateOts={handleCreateOts}\n        />\n      </Match>\n    </Switch>\n  );\n};\n\nexport default PasteView;\n","import { exports, memory } from \"./wasm_helpers\";\n\nexport function encrypt(message: string, passphrase: string): string | null {\n  if (!exports || !memory) {\n    return null;\n  }\n  const passphrase_len = passphrase.length;\n  const message_len = message.length;\n\n  // Allocate a single buffer for both strings\n  const buffer_ptr = exports.allocUint8(passphrase_len + message_len);\n  if (!buffer_ptr) {\n    console.error(\"Failed to allocate memory\");\n    return null;\n  }\n\n  // Get a view of memory\n  let memoryView = new Uint8Array(exports.memory.buffer);\n\n  // Copy the passphrase and message into the single buffer\n  const passphraseBuffer = new TextEncoder().encode(passphrase);\n  const messageBuffer = new TextEncoder().encode(message);\n\n  // Write passphrase at the beginning of the buffer\n  for (let i = 0; i < passphrase_len; i++) {\n    memoryView[buffer_ptr + i] = passphraseBuffer[i];\n  }\n\n  // Write message right after the passphrase\n  for (let i = 0; i < message_len; i++) {\n    memoryView[buffer_ptr + passphrase_len + i] = messageBuffer[i];\n  }\n\n  // Single call to encrypt\n  const success = exports.encryptMessage(\n    buffer_ptr,\n    passphrase_len,\n    message_len,\n  );\n\n  if (!success) {\n    console.error(\"Failed to encrypt message\");\n    exports.resetArena();\n    return null;\n  }\n\n  // Get result information from separate functions\n  const resultPtr = exports.getResultPtr();\n  const resultLen = exports.getResultLen();\n\n  if (resultPtr === 0 || resultLen === 0) {\n    console.error(\"Invalid result\");\n    exports.resetArena();\n    return null;\n  }\n\n  // Get a fresh view of memory after the WASM function call\n  memoryView = new Uint8Array(exports.memory.buffer);\n\n  const decoder = new TextDecoder();\n  const result_message = decoder.decode(\n    memoryView.slice(resultPtr, resultPtr + resultLen),\n  );\n\n  // Reset the arena instead of individual frees\n  exports.resetArena();\n\n  return result_message;\n}\n\nexport function decrypt(encrypted: string, passphrase: string): string | null {\n  if (!exports || !memory) {\n    return null;\n  }\n  const passphrase_len = passphrase.length;\n  const encrypted_len = encrypted.length;\n\n  // Allocate a single buffer for both strings\n  const buffer_ptr = exports.allocUint8(passphrase_len + encrypted_len);\n  if (!buffer_ptr) {\n    console.error(\"Failed to allocate memory\");\n    return null;\n  }\n\n  // Get a view of memory\n  let memoryView = new Uint8Array(exports.memory.buffer);\n\n  // Copy the passphrase and message into the single buffer\n  const passphraseBuffer = new TextEncoder().encode(passphrase);\n  const encryptedBuffer = new TextEncoder().encode(encrypted);\n\n  // Write passphrase at the beginning of the buffer\n  for (let i = 0; i < passphrase_len; i++) {\n    memoryView[buffer_ptr + i] = passphraseBuffer[i];\n  }\n\n  // Write message right after the passphrase\n  for (let i = 0; i < encrypted_len; i++) {\n    memoryView[buffer_ptr + passphrase_len + i] = encryptedBuffer[i];\n  }\n\n  // Single call to encrypt\n  const success = exports.decryptMessage(\n    buffer_ptr,\n    passphrase_len,\n    encrypted_len,\n  );\n\n  if (!success) {\n    console.error(\"Failed to encrypt message\");\n    exports.resetArena();\n    return null;\n  }\n\n  // Get result information from separate functions\n  const resultPtr = exports.getResultPtr();\n  const resultLen = exports.getResultLen();\n\n  if (resultPtr === 0 || resultLen === 0) {\n    console.error(\"Invalid result\");\n    exports.resetArena();\n    return null;\n  }\n\n  // Get a fresh view of memory after the WASM function call\n  memoryView = new Uint8Array(exports.memory.buffer);\n\n  const decoder = new TextDecoder();\n  const result_message = decoder.decode(\n    memoryView.slice(resultPtr, resultPtr + resultLen),\n  );\n\n  // Reset the arena instead of individual frees\n  exports.resetArena();\n\n  return result_message;\n}\n","import { render } from 'solid-js/web';\nimport Paste from './PasteView';\n\nconst root = document.getElementById('root');\nif (root) {\n    render(() => <Paste />, root);\n}\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif (chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor (var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--)\n\t\t\tdeferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif (\n\t\t\t\t(priority & (1 === 0) || notFulfilled >= priority) &&\n\t\t\t\tObject.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))\n\t\t\t) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif (priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif (fulfilled) {\n\t\t\tdeferred.splice(i--, 1);\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};\n","__webpack_require__.p = \"/\";","__webpack_require__.rv = () => (\"1.3.12\")","\n      // object to store loaded and loading chunks\n      // undefined = chunk not loaded, null = chunk preloaded/prefetched\n      // [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\n      var installedChunks = {\"781\": 0,\"95\": 0,};\n      __webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif (chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor (moduleId in moreModules) {\n\t\t\tif (__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif (runtime) var result = runtime(__webpack_require__);\n\t}\n\tif (parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor (; i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif (\n\t\t\t__webpack_require__.o(installedChunks, chunkId) &&\n\t\t\tinstalledChunks[chunkId]\n\t\t) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n","__webpack_require__.ruid = \"bundler=rspack@1.3.12\";\n"],"names":["exports","memory","instance","sizeOfUint32","Uint32Array","sizeOfNullByte","Uint8Array","decodeString","pointer","length","slice","TextDecoder","decodeNullTerminatedString","memSize","console","maxLength","value","index","e","encodeNullTerminatedString","string","buffer","TextEncoder","sizeOfNullTerminatedString","initWasm","inst","wasmModule","WebAssembly","fetch","Error","now","BigInt","Date","getId","items","url","window","qrResponse","createQRCodeCallback","ptr","size","version_response","version","alignTo4Bytes","Math","createQRCode","message","messagePtr","renderQRCode","matrix","canvas","document","ctx","canvasSize","canvasScale","r","c","updateSetting","key","sett","setSett","list","packed","localStorage","JSON","_el$","_el$2","isFixed","setIsFixed","createSignal","dir","setDir","prevSize","setPrevSize","innerWidth","height","setHeight","width","setWidth","bottom","setBottom","padding","setPadding","check","aspectRatio","innerHeight","onMount","onresize","createEffect","_tmpl$","firstChild","style","setProperty","_$setAttribute","logo","_$effect","_p$","_v$","_v$2","_v$3","_v$4","undefined","_v$5","_v$6","_v$7","_v$8","removeProperty","t","a","o","i","n","s","h","SettingsForm","props","_el$4","_el$5","_el$7","_el$8","_el$0","_el$1","_el$11","_el$14","_el$3","nextSibling","_el$6","_el$9","_el$10","_el$13","_el$12","addEventListener","onChange","target","checked","Number","parseInt","_$insert","children","settings","newFormat","moveColors","twoDImages","darkMode","lastViewedCount","PasteViewBase","paste","setSelectable","setShowNotes","showNotes","setNotesOpacity","makeOpaqueOnFocus","makeTransparentOnMouseover","notesWidth","notesOpacity","copyPaste","setShowModal","showModal","isEncrypted","handleCreateOts","showQrModal","setShowQrModal","qrImageUrl","setQrImageUrl","copyStatus","setCopyStatus","working","setWorking","screenshotStatus","setScreenshotStatus","_$createComponent","Show","when","currentPaste","_el$15","_el$16","_el$18","_el$19","_el$20","_tmpl$1","_el$17","title","author","format","rental","_tmpl$5","$$mouseout","$$mouseover","innerHTML","_tmpl$2","_tmpl$3","_tmpl$4","notes","_tmpl$6","$$click","getElementsByClassName","notes_obj","getBoundingClientRect","top","_tmpl$7","replace","log","id","evtSource","EventSource","onmessage","event","data","parse","status","blob","Blob","type","URL","createObjectURL","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","close","alert","onerror","err","error","setTimeout","location","substring","lastIndexOf","imgUrl","For","each","pokemon","_el$32","_el$33","_el$35","_el$36","_el$37","_el$93","_tmpl$31","item_image","_el$34","_tmpl$10","_$p","_$style","nickname","fallback","_el$94","_tmpl$11","name","_$className","type1","gender","_el$95","_el$38","_$memo","_el$39","item","_el$41","_tmpl$12","_tmpl$13","trim","ability","_el$42","_tmpl$14","_el$43","level","_el$45","_tmpl$15","_el$46","shiny","_el$48","_tmpl$16","_el$49","hidden_power","_el$51","_tmpl$17","_el$54","_el$53","_el$52","tera_type","_el$55","_tmpl$18","_el$58","_el$57","_el$56","last_stat_ev","_el$59","_tmpl$25","evs","_el$61","_el$62","_tmpl$19","_el$63","_el$64","_tmpl$20","_el$65","_el$66","_tmpl$21","_el$67","_el$68","_tmpl$22","_el$69","_el$70","_tmpl$23","_el$71","_tmpl$24","_el$72","nature","_el$73","_tmpl$27","_el$74","endsWith","_tmpl$26","last_stat_iv","_el$76","_tmpl$30","ivs","_tmpl$28","_tmpl$29","moves","move","_el$96","_tmpl$33","_el$99","_el$100","_tmpl$34","_tmpl$35","_el$97","_tmpl$32","pokemon_image","Watermark","_el$22","_tmpl$9","_el$23","_el$24","$$keydown","stopPropagation","isOts","_el$26","_tmpl$8","_el$27","_$addEventListener","_el$28","_tmpl$0","_el$29","_el$30","_el$31","disabled","_$delegateEvents","PasteViewNew","setWorkingValue","setScreenshotStatusValue","_el$109","stats","map","x","toString","allEmpty","stat","_tmpl$38","_el$110","_el$111","_el$40","_el$44","_el$112","_tmpl$40","_el$115","_el$116","_tmpl$41","_tmpl$42","_el$113","_tmpl$39","_el$47","_el$50","_el$60","_el$78","_el$79","_el$83","_el$84","_el$88","_el$89","_el$98","_el$101","_tmpl$36","_el$104","_el$103","_el$102","_el$105","_tmpl$37","_el$108","_el$107","_el$106","PasteView","setPaste","setIsEncrypted","setData","setTitle","setNotesWidth","str","pasteObj","originalPaste","encrypted","content","pasteText","split","filter","line","test","join","form","method","action","display","encoded","stringify","btoa","String","input","submit","initSettings","moveColorsString","twoDImagesString","darkModeString","newFormatString","lastViewedCountString","lastViewedPackedString","lastViewedPacked","updateWidths","main","getElementsByTagName","sidebar","getElementById","articles","end","windowWidth","margin_bottom","floor","marginBottom","min","max","element","userSelect","children_list","push","child","pop","copyPasteBase","text","querySelectorAll","forEach","article","_","monTitle","querySelector","textContent","attributeDivs","div","navigator","clipboard","writeText","copyPasteNew","abilityItem","darkModeToggle","classList","add","remove","meta","setAttribute","currentTitle","decodeHtmlEntities","txt","decoded","parsedPaste","parsePaste","twoDimages","decodePaste","pastePtr","titlePtr","titleSlice","authorPtr","authorSlice","notesPtr","notesSlice","formatPtr","formatSlice","rentalPtr","rentalSlice","pokemon_len","pokemonLenSlice","pokemonArrayPtrPointer","pokemonArrayPointer","pokemonArrayPtrSlice","alignedPokemonArrayPointer","pokemonArraySlice","pokemonPtr","mon","decodePokemon","offset","nameSlice","namePtr","nicknameSlice","nicknamePtr","basePtr","itemSlice","itemPtr","genderNum","genderPtr","itemImageSlice","itemImagePtr","itemImage","pokemonImageSlice","pokemonImagePtr","pokemonImage","moves_len","movesLenPtr","movesArrayPointer","movesArrayPtrSlice","movesArray","currentMovePtr","decodeMove","movePtr","type1Slice","type1Ptr","evValue","evPtr","ivValue","ivPtr","linesLenPointer","lines_len","linesLenSlice","lines","linesArrayPtrPointer","linesArrayPointer","linesArrayPtrSlice","alignedLinesArrayPointer","linesArraySlice","linePtr","lastStatEvSlice","lastStatEvPtr","lastStatIvSlice","lastStatIvPtr","type2Slice","type2Ptr","type2","abilitySlice","abilityPtr","levelPtr","shinySlice","shinyPtr","hpSlice","hpPointer","teraTypeSlice","teraTypePointer","natureSlice","naturePointer","isOtsValue","response","json","initWebWasm","socket","WebSocket","onopen","done","promptMsg","passkey","prompt","decrypted","decrypt","passphrase","passphrase_len","encrypted_len","buffer_ptr","memoryView","passphraseBuffer","encryptedBuffer","resultPtr","resultLen","result_message","decoder","onCleanup","removeEventListener","handleKeyDown","root","clientHeight","overflowY","paste_value","SavePasteToLastVisited","packedString","packedStringPointer","packedStringLength","pasteJsonPointer","pasteJsonLength","packedPtr","packedLen","packedBytes","Switch","Match","render","Paste","Object","self"],"mappings":"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"}