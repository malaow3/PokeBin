{"version":3,"file":"static/js/12.861a27ec.js","sources":["webpack://web/./node_modules/solid-js/dist/solid.js","webpack://web/./node_modules/solid-js/web/dist/web.js"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = (n + m) >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;\n      else if (cmp < 0) n = k - 1;\n      else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst IS_DEV = false;\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst SUPPORTS_PROXY = typeof Proxy === \"function\";\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned\n      ? UNOWNED\n      : {\n          owned: null,\n          cleanups: null,\n          context: current ? current.context : null,\n          owner: current\n        },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);\n      else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);\n  else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(\n      () => {\n        fn ? fn() : untrack(onInvalidate);\n        fn = undefined;\n      },\n      undefined,\n      false,\n      0\n    ),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (typeof pFetcher === \"function\") {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  } else {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = \"initialValue\" in options,\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;\n    else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated)\n        queueMicrotask(() =>\n          options.onHydrated(key, {\n            value: v\n          })\n        );\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);\n          else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p =\n      initP !== NO_INIT\n        ? initP\n        : untrack(() =>\n            fetcher(lookup, {\n              value: value(),\n              refetching\n            })\n          );\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);\n      else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => (scheduled = false));\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(\n      v => loadEnd(p, v, undefined, lookup),\n      e => loadEnd(p, undefined, castError(e), lookup)\n    );\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));\n  else load(false);\n  return [\n    read,\n    {\n      refetch: load,\n      mutate: setValue\n    }\n  ];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(\n    () => {\n      if (!t || !t.fn)\n        t = requestCallback(\n          () => setDeferred(() => node.value),\n          timeout !== undefined\n            ? {\n                timeout\n              }\n            : undefined\n        );\n      return source();\n    },\n    undefined,\n    true\n  );\n  const [deferred, setDeferred] = createSignal(\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    options\n  );\n  updateComputation(node);\n  setDeferred(() =>\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n  );\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(\n    p => {\n      const v = source();\n      for (const [key, val] of subs.entries())\n        if (fn(key, v) !== fn(key, p)) {\n          for (const c of val.values()) {\n            c.state = STALE;\n            if (c.pure) Updates.push(c);\n            else Effects.push(c);\n          }\n        }\n      return v;\n    },\n    undefined,\n    true,\n    STALE\n  );\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if ((l = subs.get(key))) l.add(listener);\n      else subs.set(key, (l = new Set([listener])));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(\n      key,\n      Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value\n    );\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null);\n  else if (Owner.cleanups === null) Owner.cleanups = [fn];\n  else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t =\n        Transition ||\n        (Transition = {\n          sources: new Set(),\n          effects: [],\n          promises: new Set(),\n          disposed: new Set(),\n          queue: new Set(),\n          running: true\n        });\n      t.done || (t.done = new Promise(res => (t.resolve = res)));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/ createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined\n    ? value\n    : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const { factory: oldFactory, untrack: oldUntrack } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);\n    else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current =\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || (!isComp && Transition.sources.has(node))) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);\n            else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;\n          else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (IS_DEV);\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(\n    node,\n    Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value,\n    time\n  );\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null);\n  else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];\n      else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];\n      else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;\n  else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);\n    else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);\n    else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;\n  else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount))\n          runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;\n      else o.state = PENDING;\n      if (o.pure) Updates.push(o);\n      else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (node.tOwned) {\n    for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n    delete node.tOwned;\n  }\n  if (Transition && Transition.running && node.pure) {\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;\n  else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, (owner && owner.owner) || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects)\n    Effects.push({\n      fn() {\n        runErrors(error, fns, owner);\n      },\n      state: STALE\n    });\n  else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(\n      () =>\n        (res = untrack(() => {\n          Owner.context = {\n            ...Owner.context,\n            [id]: props.value\n          };\n          return children(() => props.children);\n        })),\n      undefined\n    );\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null);\n  else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler =\n        typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer, initalValue = undefined) {\n  const [s, set] = createSignal(initalValue, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => (\"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub()));\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      } else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (\n          start = 0, end = Math.min(len, newLen);\n          start < end && items[start] === newItems[start];\n          start++\n        );\n        for (\n          end = len - 1, newEnd = newLen - 1;\n          end >= start && newEnd >= start && items[end] === newItems[newEnd];\n          end--, newEnd--\n        ) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, (len = newLen));\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return (mapped = mapped.slice(0, len));\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || (!!s && $PROXY in s);\n    sources[i] = typeof s === \"function\" ? ((proxy = true), createMemo(s)) : s;\n  }\n  if (SUPPORTS_PROXY && proxy) {\n    return new Proxy(\n      {\n        get(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            const v = resolveSource(sources[i])[property];\n            if (v !== undefined) return v;\n          }\n        },\n        has(property) {\n          for (let i = sources.length - 1; i >= 0; i--) {\n            if (property in resolveSource(sources[i])) return true;\n          }\n          return false;\n        },\n        keys() {\n          const keys = [];\n          for (let i = 0; i < sources.length; i++)\n            keys.push(...Object.keys(resolveSource(sources[i])));\n          return [...new Set(keys)];\n        }\n      },\n      propTraps\n    );\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get\n          ? {\n              enumerable: true,\n              configurable: true,\n              get: resolveSources.bind((sourcesMap[key] = [desc.get.bind(source)]))\n            }\n          : desc.value !== undefined\n          ? desc\n          : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));\n          else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);\n    else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if (SUPPORTS_PROXY && $PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy(\n        {\n          get(property) {\n            return k.includes(property) ? props[property] : undefined;\n          },\n          has(property) {\n            return k.includes(property) && property in props;\n          },\n          keys() {\n            return k.filter(property => property in props);\n          }\n        },\n        propTraps\n      );\n    });\n    res.push(\n      new Proxy(\n        {\n          get(property) {\n            return blocked.has(property) ? undefined : props[property];\n          },\n          has(property) {\n            return blocked.has(property) ? false : property in props;\n          },\n          keys() {\n            return Object.keys(props).filter(k => !blocked.has(k));\n          }\n        },\n        propTraps\n      )\n    );\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc =\n      !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc\n          ? (objects[objectIndex][propName] = desc.value)\n          : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc\n        ? (otherObject[propName] = desc.value)\n        : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() =>\n      (Comp = comp())\n        ? untrack(() => {\n            if (IS_DEV);\n            if (!ctx || sharedConfig.done) return Comp(props);\n            const c = sharedConfig.context;\n            setHydrateContext(ctx);\n            const r = Comp(props);\n            setHydrateContext(c);\n            return r;\n          })\n        : \"\"\n    );\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => (comp = () => mod.default)), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const conditionValue = createMemo(() => props.when, undefined, undefined);\n  const condition = keyed\n    ? conditionValue\n    : createMemo(conditionValue, undefined, {\n        equals: (a, b) => !a === !b\n      });\n  return createMemo(\n    () => {\n      const c = condition();\n      if (c) {\n        const child = props.children;\n        const fn = typeof child === \"function\" && child.length > 0;\n        return fn\n          ? untrack(() =>\n              child(\n                keyed\n                  ? c\n                  : () => {\n                      if (!untrack(condition)) throw narrowedError(\"Show\");\n                      return conditionValue();\n                    }\n              )\n            )\n          : child;\n      }\n      return props.fallback;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Switch(props) {\n  const chs = children(() => props.children);\n  const switchFunc = createMemo(() => {\n    const ch = chs();\n    const mps = Array.isArray(ch) ? ch : [ch];\n    let func = () => undefined;\n    for (let i = 0; i < mps.length; i++) {\n      const index = i;\n      const mp = mps[i];\n      const prevFunc = func;\n      const conditionValue = createMemo(\n        () => (prevFunc() ? undefined : mp.when),\n        undefined,\n        undefined\n      );\n      const condition = mp.keyed\n        ? conditionValue\n        : createMemo(conditionValue, undefined, {\n            equals: (a, b) => !a === !b\n          });\n      func = () => prevFunc() || (condition() ? [index, conditionValue, mp] : undefined);\n    }\n    return func;\n  });\n  return createMemo(\n    () => {\n      const sel = switchFunc()();\n      if (!sel) return props.fallback;\n      const [index, conditionValue, mp] = sel;\n      const child = mp.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn\n        ? untrack(() =>\n            child(\n              mp.keyed\n                ? conditionValue()\n                : () => {\n                    if (untrack(switchFunc)()?.[0] !== index) throw narrowedError(\"Match\");\n                    return conditionValue();\n                  }\n            )\n          )\n        : child;\n    },\n    undefined,\n    undefined\n  );\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load)\n    err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(\n    () => {\n      let e;\n      if ((e = errored())) {\n        const f = props.fallback;\n        return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      }\n      return catchError(() => props.children, setErrored);\n    },\n    undefined,\n    undefined\n  );\n}\n\nconst suspenseListEquals = (a, b) =>\n  a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */ createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(\n    prev => {\n      const reveal = props.revealOrder,\n        tail = props.tail,\n        { showContent = true, showFallback = true } = show ? show() : {},\n        reg = registry(),\n        reverse = reveal === \"backwards\";\n      if (reveal === \"together\") {\n        const all = reg.every(inFallback => !inFallback());\n        const res = reg.map(() => ({\n          showContent: all && showContent,\n          showFallback\n        }));\n        res.inFallback = !all;\n        return res;\n      }\n      let stop = false;\n      let inFallback = prev.inFallback;\n      const res = [];\n      for (let i = 0, len = reg.length; i < len; i++) {\n        const n = reverse ? len - i - 1 : i,\n          s = reg[n]();\n        if (!stop && !s) {\n          res[n] = {\n            showContent,\n            showFallback\n          };\n        } else {\n          const next = !stop;\n          if (next) inFallback = true;\n          res[n] = {\n            showContent: next,\n            showFallback: !tail || (next && tail === \"collapsed\") ? showFallback : false\n          };\n          stop = true;\n        }\n      }\n      if (!stop) inFallback = false;\n      res.inFallback = inFallback;\n      return res;\n    },\n    {\n      inFallback: false\n    }\n  );\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;\n      else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(\n        () => {\n          if (sharedConfig.done) return set();\n          sharedConfig.gather(key);\n          setHydrateContext(ctx);\n          set();\n          setHydrateContext();\n        },\n        err => {\n          error = err;\n          set();\n        }\n      );\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return (flicker = undefined);\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            { showContent = true, showFallback = true } = show ? show() : {};\n          if ((!inFallback || (p && p !== \"$$f\")) && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport {\n  $DEVCOMP,\n  $PROXY,\n  $TRACK,\n  DEV,\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  batch,\n  cancelCallback,\n  catchError,\n  children,\n  createComponent,\n  createComputed,\n  createContext,\n  createDeferred,\n  createEffect,\n  createMemo,\n  createReaction,\n  createRenderEffect,\n  createResource,\n  createRoot,\n  createSelector,\n  createSignal,\n  createUniqueId,\n  enableExternalSource,\n  enableHydration,\n  enableScheduling,\n  equalFn,\n  from,\n  getListener,\n  getOwner,\n  indexArray,\n  lazy,\n  mapArray,\n  mergeProps,\n  observable,\n  on,\n  onCleanup,\n  onError,\n  onMount,\n  requestCallback,\n  resetErrorBoundaries,\n  runWithOwner,\n  sharedConfig,\n  splitProps,\n  startTransition,\n  untrack,\n  useContext,\n  useTransition\n};\n","import {\n  createRoot,\n  createRenderEffect,\n  untrack,\n  sharedConfig,\n  enableHydration,\n  getOwner,\n  createEffect,\n  runWithOwner,\n  createMemo,\n  createSignal,\n  onCleanup,\n  splitProps\n} from \"solid-js\";\nexport {\n  ErrorBoundary,\n  For,\n  Index,\n  Match,\n  Show,\n  Suspense,\n  SuspenseList,\n  Switch,\n  createComponent,\n  createRenderEffect as effect,\n  getOwner,\n  createMemo as memo,\n  mergeProps,\n  untrack\n} from \"solid-js\";\n\nconst booleans = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"indeterminate\",\n  \"inert\",\n  \"ismap\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"seamless\",\n  \"selected\"\n];\nconst Properties = /*#__PURE__*/ new Set([\n  \"className\",\n  \"value\",\n  \"readOnly\",\n  \"formNoValidate\",\n  \"isMap\",\n  \"noModule\",\n  \"playsInline\",\n  ...booleans\n]);\nconst ChildProperties = /*#__PURE__*/ new Set([\n  \"innerHTML\",\n  \"textContent\",\n  \"innerText\",\n  \"children\"\n]);\nconst Aliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/ Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? (a[tagName] ? a[\"$\"] : undefined) : a;\n}\nconst DelegatedEvents = /*#__PURE__*/ new Set([\n  \"beforeinput\",\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"focusin\",\n  \"focusout\",\n  \"input\",\n  \"keydown\",\n  \"keyup\",\n  \"mousedown\",\n  \"mousemove\",\n  \"mouseout\",\n  \"mouseover\",\n  \"mouseup\",\n  \"pointerdown\",\n  \"pointermove\",\n  \"pointerout\",\n  \"pointerover\",\n  \"pointerup\",\n  \"touchend\",\n  \"touchmove\",\n  \"touchstart\"\n]);\nconst SVGElements = /*#__PURE__*/ new Set([\n  \"altGlyph\",\n  \"altGlyphDef\",\n  \"altGlyphItem\",\n  \"animate\",\n  \"animateColor\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"color-profile\",\n  \"cursor\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"font\",\n  \"font-face\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"foreignObject\",\n  \"g\",\n  \"glyph\",\n  \"glyphRef\",\n  \"hkern\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"missing-glyph\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"tref\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n  \"vkern\"\n]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/ new Set([\n  \"html\",\n  \"base\",\n  \"head\",\n  \"link\",\n  \"meta\",\n  \"style\",\n  \"title\",\n  \"body\",\n  \"address\",\n  \"article\",\n  \"aside\",\n  \"footer\",\n  \"header\",\n  \"main\",\n  \"nav\",\n  \"section\",\n  \"body\",\n  \"blockquote\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"figcaption\",\n  \"figure\",\n  \"hr\",\n  \"li\",\n  \"ol\",\n  \"p\",\n  \"pre\",\n  \"ul\",\n  \"a\",\n  \"abbr\",\n  \"b\",\n  \"bdi\",\n  \"bdo\",\n  \"br\",\n  \"cite\",\n  \"code\",\n  \"data\",\n  \"dfn\",\n  \"em\",\n  \"i\",\n  \"kbd\",\n  \"mark\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"small\",\n  \"span\",\n  \"strong\",\n  \"sub\",\n  \"sup\",\n  \"time\",\n  \"u\",\n  \"var\",\n  \"wbr\",\n  \"area\",\n  \"audio\",\n  \"img\",\n  \"map\",\n  \"track\",\n  \"video\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"param\",\n  \"picture\",\n  \"portal\",\n  \"source\",\n  \"svg\",\n  \"math\",\n  \"canvas\",\n  \"noscript\",\n  \"script\",\n  \"del\",\n  \"ins\",\n  \"caption\",\n  \"col\",\n  \"colgroup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"tr\",\n  \"button\",\n  \"datalist\",\n  \"fieldset\",\n  \"form\",\n  \"input\",\n  \"label\",\n  \"legend\",\n  \"meter\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"progress\",\n  \"select\",\n  \"textarea\",\n  \"details\",\n  \"dialog\",\n  \"menu\",\n  \"summary\",\n  \"details\",\n  \"slot\",\n  \"template\",\n  \"acronym\",\n  \"applet\",\n  \"basefont\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"center\",\n  \"content\",\n  \"dir\",\n  \"font\",\n  \"frame\",\n  \"frameset\",\n  \"hgroup\",\n  \"image\",\n  \"keygen\",\n  \"marquee\",\n  \"menuitem\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"plaintext\",\n  \"rb\",\n  \"rtc\",\n  \"shadow\",\n  \"spacer\",\n  \"strike\",\n  \"tt\",\n  \"xmp\",\n  \"a\",\n  \"abbr\",\n  \"acronym\",\n  \"address\",\n  \"applet\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"basefont\",\n  \"bdi\",\n  \"bdo\",\n  \"bgsound\",\n  \"big\",\n  \"blink\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"center\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"content\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"dir\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"font\",\n  \"footer\",\n  \"form\",\n  \"frame\",\n  \"frameset\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"image\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"marquee\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"nobr\",\n  \"noembed\",\n  \"noframes\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"plaintext\",\n  \"portal\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"shadow\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"spacer\",\n  \"span\",\n  \"strike\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"tt\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  \"xmp\",\n  \"input\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\"\n]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? (bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart]) : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document\n      ? code()\n      : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isImportNode, isSVG, isMathML) {\n  let node;\n  const create = () => {\n    const t = isMathML\n      ? document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"template\")\n      : document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : isMathML ? t.firstChild : t.content.firstChild;\n  };\n  const fn = isImportNode\n    ? () => untrack(() => document.importNode(node || (node = create()), true))\n    : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);\n  else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);\n  else node.setAttributeNS(namespace, name, value);\n}\nfunction setBoolAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  value ? node.setAttribute(name, \"\") : node.removeAttribute(name);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");\n  else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, (handler[0] = e => handlerFn.call(node, handler[1], e)));\n  } else node.addEventListener(name, handler, typeof handler !== \"function\" && handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return (nodeStyle.cssText = value);\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(\n      () => (prevProps.children = insertExpression(node, props.children, prevProps.children))\n    );\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef, props);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef, props);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get((key = getHydrationKey())))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;\n        else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const { completed, events } = sharedConfig;\n      if (!events) return;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++)\n    node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef, props) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev, typeof prev !== \"function\" && prev);\n    value && node.addEventListener(e, value, typeof value !== \"function\" && value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if (prop.slice(0, 5) === \"bool:\") {\n    setBoolAttribute(node, prop.slice(5), value);\n  } else if (\n    (forceProp = prop.slice(0, 5) === \"prop:\") ||\n    (isChildProp = ChildProperties.has(prop)) ||\n    (!isSVG &&\n      ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop)))) ||\n    (isCE = node.nodeName.includes(\"-\") || \"is\" in props)\n  ) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);\n    else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;\n    else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);\n    else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  let node = e.target;\n  const key = `$$${e.type}`;\n  const oriTarget = e.target;\n  const oriCurrentTarget = e.currentTarget;\n  const retarget = value =>\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value\n    });\n  const handleNode = () => {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node.host &&\n      typeof node.host !== \"string\" &&\n      !node.host._$host &&\n      node.contains(e.target) &&\n      retarget(node.host);\n    return true;\n  };\n  const walkUpTree = () => {\n    while (handleNode() && (node = node._$host || node.parentNode || node.host));\n  };\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  if (e.composedPath) {\n    const path = e.composedPath();\n    retarget(path[0]);\n    for (let i = 0; i < path.length - 2; i++) {\n      node = path[i];\n      if (!handleNode()) break;\n      if (node._$host) {\n        node = node._$host;\n        walkUpTree();\n        break;\n      }\n      if (node.parentNode === oriCurrentTarget) {\n        break;\n      }\n    }\n  } else walkUpTree();\n  retarget(oriTarget);\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();\n      else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = (multi && current[0] && current[0].parentNode) || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => (current = insertExpression(parent, array, current, marker, true)));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return (current = [...parent.childNodes]);\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return (current = nodes);\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return (current = multi ? [value] : value);\n    if (Array.isArray(current)) {\n      if (multi) return (current = cleanChildren(parent, current, marker, value));\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false);\n    else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic =\n          normalizeIncomingArray(\n            normalized,\n            Array.isArray(item) ? item : [item],\n            Array.isArray(prev) ? prev : [prev]\n          ) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);\n      else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return (parent.textContent = \"\");\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i)\n          isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);\n        else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key))\n      sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const { useShadow } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(\n    () => {\n      if (hydrating) getOwner().user = hydrating = false;\n      content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n      const el = mount();\n      if (el instanceof HTMLHeadElement) {\n        const [clean, setClean] = createSignal(false);\n        const cleanup = () => setClean(true);\n        createRoot(dispose => insert(el, () => (!clean() ? content() : dispose()), null));\n        onCleanup(cleanup);\n      } else {\n        const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot =\n            useShadow && container.attachShadow\n              ? container.attachShadow({\n                  mode: \"open\"\n                })\n              : container;\n        Object.defineProperty(container, \"_$host\", {\n          get() {\n            return marker.parentNode;\n          },\n          configurable: true\n        });\n        insert(renderRoot, content);\n        el.appendChild(container);\n        props.ref && props.ref(container);\n        onCleanup(() => el.removeChild(container));\n      }\n    },\n    undefined,\n    {\n      render: !hydrating\n    }\n  );\n  return marker;\n}\nfunction createDynamic(component, props) {\n  const cached = createMemo(component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(props));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, props, isSvg);\n        return el;\n    }\n  });\n}\nfunction Dynamic(props) {\n  const [, others] = splitProps(props, [\"component\"]);\n  return createDynamic(() => props.component, others);\n}\n\nexport {\n  Aliases,\n  voidFn as Assets,\n  ChildProperties,\n  DOMElements,\n  DelegatedEvents,\n  Dynamic,\n  Hydration,\n  voidFn as HydrationScript,\n  NoHydration,\n  Portal,\n  Properties,\n  RequestContext,\n  SVGElements,\n  SVGNamespace,\n  addEventListener,\n  assign,\n  classList,\n  className,\n  clearDelegatedEvents,\n  createDynamic,\n  delegateEvents,\n  dynamicProperty,\n  escape,\n  voidFn as generateHydrationScript,\n  voidFn as getAssets,\n  getHydrationKey,\n  getNextElement,\n  getNextMarker,\n  getNextMatch,\n  getPropAlias,\n  voidFn as getRequestEvent,\n  hydrate,\n  innerHTML,\n  insert,\n  isDev,\n  isServer,\n  render,\n  renderToStream,\n  renderToString,\n  renderToStringAsync,\n  resolveSSRNode,\n  runHydrationEvents,\n  setAttribute,\n  setAttributeNS,\n  setBoolAttribute,\n  setProperty,\n  spread,\n  ssr,\n  ssrAttribute,\n  ssrClassList,\n  ssrElement,\n  ssrHydrationKey,\n  ssrSpread,\n  ssrStyle,\n  style,\n  template,\n  use,\n  voidFn as useAssets\n};\n"],"names":["SuspenseContext","sharedConfig","undefined","getContextId","count","num","String","len","Symbol","$TRACK","signalOptions","a","b","runEffects","runQueue","UNOWNED","Owner","Transition","Listener","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","listener","owner","unowned","current","root","updateFn","untrack","cleanNode","runUpdates","createSignal","value","options","s","Object","readSignal","writeSignal","createRenderEffect","updateComputation","createComputation","createEffect","context","runUserEffects","c","createMemo","onMount","onCleanup","setTransPending","runningTransition","updates","lookUpstream","sSlot","node","isComp","TransitionRunning","i","o","markDownstream","Error","time","runComputation","queueMicrotask","nextValue","err","handleError","init","pure","state","runTop","ancestors","top","prev","wait","res","completeUpdates","sources","disposed","e","d","v","queue","userLength","ignore","source","index","obs","n","reset","runErrors","fns","f","error","FALLBACK","dispose","createComponent","Comp","props","narrowedError","name","For","fallback","mapArray","list","mapFn","items","mapped","disposers","indexes","newItems","newLen","j","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","item","disposer","Array","mapper","Math","Map","set","Show","keyed","conditionValue","condition","child","Switch","chs","children","memo","resolveChildren","results","result","switchFunc","ch","mps","func","mp","prevFunc","sel","Match","$$EVENTS","render","code","element","document","insert","template","html","isImportNode","isSVG","isMathML","create","t","delegateEvents","eventNames","window","Set","l","eventHandler","setAttribute","isHydrating","className","addEventListener","handler","delegate","handlerFn","style","nodeStyle","parent","accessor","marker","initial","insertExpression","el","ev","key","oriTarget","oriCurrentTarget","retarget","handleNode","data","walkUpTree","_$HY","path","unwrapArray","hydrating","cleaned","multi","cleanChildren","array","currentArray","normalizeIncomingArray","normalized","unwrap","dynamic","nodes","appendNodes","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","replacement","inserted","isParent"],"mappings":"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"}